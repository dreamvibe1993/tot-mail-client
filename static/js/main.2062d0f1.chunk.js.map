{"version":3,"sources":["assets/images/gif/watches-0.gif","assets/images/gif/riding-train-0.gif","models/types/enums/mailbox-sections.ts","assets/json/index.ts","redux/actions/letters/letter-actions.ts","redux/actions/sections/section-actions.ts","redux/reducers/mailbox/mailboxSlice.ts","redux/store/store.ts","lib/hooks/useGoBack.ts","components/UI/Buttons/ServiceButton/ServiceButton.tsx","components/404/404.tsx","components/Home/Home.tsx","css/animations/fade-in.js","components/FakeLoader/FakeLoader.tsx","redux/hooks/hooks.ts","components/UI/Wraps/CursorWrap.js","components/Letter/Letter.tsx","components/UI/Spans/SpanWithOverflow.tsx","components/Letter/LetterTab.tsx","components/UI/Dropdowns/DropdownMenu.tsx","components/MailboxSection/MailboxSection.tsx","configs/routes/mail-client-routes.tsx","components/UI/Inputs/ServiceInput.tsx","components/UI/Tabs/MenuTab.tsx","components/UI/Tabs/CustomSectionMenuTab/CustomSectionMenuTab.tsx","components/DrawerMenu/DrawerMenu.tsx","components/MailClient/MailClient.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","MailboxSections","incomingLetters","sentLetters","deleted","drafts","spam","letterActions","deleteLetter","state","action","payload","sectionType","incoming","letters","filter","letter","id","sent","custom","customSections","map","sec","section","moveLetter","from","to","updatedLetters","concat","Object","toConsumableArray","changeLetterStatus","setSeenStatus","letterId","status","seen","Array","isArray","sectionId","setSectionData","string","newBoxId","CyrillicToTranslit","transform","toLowerCase","name","slug","digitSpaceRegex","addDigitToName","digitWithSpaceInName","match","replace","Number","sectionActions","addSection","newSection","newBox","objectSpread","deleteSection","renameSection","updatedSection","copySection","reduce","acc","push","nameWithoutDigit","sectionCopy","sameSectionsDigits","sectionName","includes","digit","sort","a","b","length","greatestNumber","reverse","newName","lettersNewIds","JSON","parse","stringify","uuidv4","copy","initialState","mailboxSlice","createSlice","reducers","mailboxActions","actions","store","configureStore","reducer","mailbox","mailboxReducer","useGoBack","history","useHistory","slugs","location","pathname","split","url","slice","join","ServiceButton","styled","button","_templateObject","taggedTemplateLiteral","NotFoundPage","goBack","react_default","createElement","NotFoundContainer","Heading","onClick","h1","_404_templateObject","div","_templateObject2","Home","HomeContainer","Block","Home_Heading","href","react_router_dom","Home_templateObject","Home_templateObject2","_templateObject3","fadeIn","keyframes","fade_in_templateObject","FakeLoader","_React$useState","React","useState","_React$useState2","slicedToArray","text","setText","intervalId","useRef","timerId1","timerId2","timerId3","counter","useEffect","current","setInterval","prev","setTimeout","window","clearInterval","clearTimeout","FakeLoaderContainer","TextWrapper","ImgWrapper","src","Watches","alt","FakeLoader_templateObject","FakeLoader_templateObject2","FakeLoader_templateObject3","useAppDispatch","useDispatch","useAppSelector","useSelector","CursorWrap","CursorWrap_templateObject","Letter","_ref","_useAppSelector","mailboxSections","sections","dispatch","params","useParams","closeLetter","setLetter","findLetter","useCallback","find","customSectionId","Fragment","WindowControls","index_esm","LetterWindowContainer","TopBar","UserPersonal","Avatar","Creds","Name","sender","Email","email","Controls","Select","onChange","e","sectionTypeTo","target","value","sectionFrom","console","error","values","i","key","keys","LetterContainer","LetterLayout","react_markdown","message","Letter_templateObject","Letter_templateObject2","select","Letter_templateObject3","_templateObject4","_templateObject5","_templateObject6","span","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","SpanWithOverflow","SpanWithOverflow_templateObject","LetterTab","_ref$onCheck","onCheck","_ref$isChecked","isChecked","useRouteMatch","LetterTabContainer","Status","StatusWord","StatusIndicator","VerticalDivider","Checkbox","checked","checkedLetter","Set","LetterTab_Creds","From","LetterTab_Email","Topic","topic","Preview","Actions","SentAt","Date","receivedAt","toLocaleString","weekday","getHours","getMinutes","LetterTab_templateObject","LetterTab_templateObject2","LetterTab_templateObject3","LetterTab_templateObject4","LetterTab_templateObject5","LetterTab_templateObject6","LetterTab_templateObject7","LetterTab_templateObject8","LetterTab_templateObject9","LetterTab_templateObject10","LetterTab_templateObject11","LetterTab_templateObject12","_templateObject13","DropdownMenu","children","_ref$options","options","isOpen","setIsOpen","_React$useState3","_React$useState4","x","setX","_React$useState5","_React$useState6","y","setY","thisElementId","getTime","childrenRef","selfRef","closeDropdown","setDropdownCoords","_setDropdownCoords","apply","this","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","childWrapperRef","dropdownRef","dropdown","child","onePercent","wrap","_context","next","abrupt","style","opacity","getBoundingClientRect","height","width","innerWidth","innerHeight","stop","addEventListener","removeEventListener","DropdownWrapper","ChildrenWrapper","ref","Dropdown","o","handler","DropdownMenu_templateObject","DropdownMenu_templateObject2","DropdownMenu_templateObject3","MailboxSection","mail","setMail","setSection","checkedLetters","setCheckedLetters","goToIncoming","errMessage","moveLettersTo","where","forEach","sortLettersByDate","uncheckAll","sortLettersByStatus","checkAll","handlers","delete","deleteCheckedLetters","toast","success","returnMenuOptions","customSectionsHandlers","Boolean","TopBarComponent","MailboxSection_TopBar","MailboxName","toUpperCase","MailboxSection_Controls","DropdownMenu_DropdownMenu","MailBoxContainer","LetterTab_LetterTab","EmptyPageWrap","textAlign","MailboxSection_ImgWrapper","Image","RidingTrain","MailboxSection_templateObject","img","MailboxSection_templateObject2","MailboxSection_templateObject3","h2","MailboxSection_templateObject4","MailboxSection_templateObject5","MailboxSection_templateObject6","MailboxSection_templateObject7","MailClientRoutes","path","react_router","exact","FakeLoader_FakeLoader","MailboxSection_MailboxSection","Letter_Letter","ServiceInput","input","ServiceInput_templateObject","MenuTab","MenuTab_templateObject","open","CustomSectionMenuTab","isTabRenaming","setTabRenaming","newSectionName","setNewSectionName","stopTabRenaming","CustomTab","TabNameInputs","SpecialInput","type","placeholder","maxLength","pointerEvents","display","alignItems","CustomSectionMenuTab_templateObject","CustomSectionMenuTab_templateObject2","CustomSectionMenuTab_templateObject3","DrawerMenu","useLocation","drawerHeight","setDrawerHeight","isSectionNameInputOpen","setSectionNameInputOpen","CustomTabsScrollWrapper","addStylesIfScroll","tabsScrollWrap","scrollHeight","clientHeight","padding","backgroundColor","borderTop","borderBottom","borderRadius","SectionNameInputContainer","CustomTabsScroll","CustomTabsContainer","CustomSectionMenuTab_CustomSectionMenuTab","DrawerMenu_templateObject","DrawerMenu_templateObject2","DrawerMenu_templateObject3","MailClient","isDrawerShow","setDrawerShow","Header","gi_index_esm","MailClientContainer","OpaqueScreen","isShow","Drawer","DrawerMenu_DrawerMenu","Client","mail_client_routes_MailClientRoutes","MailClient_templateObject","MailClient_templateObject2","MailClient_templateObject3","MailClient_templateObject4","MailClient_templateObject5","App","react_toastify_esm","autoClose","closeOnClick","className","Home_Home","MailClient_MailClient","_404_NotFoundPage","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","es","src_App"],"mappings":"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","file":"static/js/main.2062d0f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/watches-0.b5857434.gif\";","module.exports = __webpack_public_path__ + \"static/media/riding-train-0.656685f9.gif\";","/* eslint-disable no-unused-vars */\nexport enum MailboxSections {\n  incoming = \"incoming\",\n  sent = \"sent\",\n  drafts = \"drafts\",\n  deleted = \"deleted\",\n  spam = \"spam\",\n  custom = \"customSections\"\n}\n","import Letter1 from \"./letter-1.json\";\nimport Letter2 from \"./letter-2.json\";\nimport Letter3 from \"./letter-3.json\";\nimport Letter4 from \"./letter-4.json\";\nimport Letter5 from \"./letter-5.json\";\nimport Letter6 from \"./letter-6.json\";\nimport Letter7 from \"./letter-7.json\";\nimport Letter8 from \"./letter-8.json\";\nimport Letter9 from \"./letter-9.json\";\nimport Letter10 from \"./letter-10.json\";\nimport Letter11 from \"./letter-11.json\";\nimport Letter12 from \"./letter-12.json\";\nimport Letter13 from \"./letter-13.json\";\n\nexport const incomingLetters: Array<Letter> = [Letter1, Letter2, Letter3];\n\nexport const sentLetters: Array<Letter> = [Letter4, Letter5, Letter6];\n\nexport const deleted: Array<Letter> = [Letter7];\n\nexport const drafts: Array<Letter> = [Letter8, Letter9, Letter10];\n\nexport const spam: Array<Letter> = [Letter11, Letter12, Letter13];\n","import { MailboxSections } from \"../../../models/types/enums/mailbox-sections\";\n\ninterface MoveLetterAction {\n  payload: {\n    from: { sectionType: MailboxSections; section: MailboxSection };\n    letter: Letter;\n    to: { sectionType: string };\n  };\n  type: string;\n}\n\ninterface ChangeLetterStatusAction {\n  payload: {\n    sectionType: MailboxSections;\n    sectionId: string;\n    letterId: string;\n  };\n  type: string;\n}\n\nexport const letterActions = {\n  deleteLetter: (state: MailboxInitialState, action: Action) => {\n    if (action.payload.sectionType === MailboxSections.incoming) {\n      state.incoming.letters = state.incoming.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.sent) {\n      state.sent.letters = state.sent.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.drafts) {\n      state.drafts.letters = state.drafts.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.deleted) {\n      state.deleted.letters = state.deleted.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.spam) {\n      state.spam.letters = state.spam.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.custom) {\n      state.customSections = state.customSections.map((sec: MailboxSection) => {\n        if (sec.id === action.payload.section.id) {\n          sec.letters = sec.letters.filter(\n            (letter: Letter) => letter.id !== action.payload.id\n          );\n        }\n        return sec;\n      });\n    }\n  },\n  moveLetter: (state: MailboxInitialState, action: MoveLetterAction) => {\n    const from = action.payload.from.sectionType as keyof typeof state;\n    const to = action.payload.to.sectionType as keyof typeof state;\n    const letter = action.payload.letter;\n\n    if (from === MailboxSections.custom) {\n      state[from] = state[from].map((sec: MailboxSection) => {\n        if (sec.id === action.payload.from.section.id) {\n          sec.letters = sec.letters.filter(\n            (letter: Letter) => action.payload.letter.id !== letter.id\n          );\n        }\n        return sec;\n      });\n    } else {\n      // Not custom folders\n      state[from].letters = state[from].letters.filter(\n        (letter: Letter) => action.payload.letter.id !== letter.id\n      );\n    }\n\n    if (!state[to]) {\n      state.customSections = state.customSections.map((sec: MailboxSection) => {\n        if (sec.id === to) {\n          sec.letters = [...sec.letters, letter];\n        }\n        return sec;\n      });\n    } else {\n      // Not custom folders\n      const updatedLetters = [...state[to].letters, action.payload.letter];\n      state[to].letters = updatedLetters;\n    }\n  },\n  changeLetterStatus: (state: MailboxInitialState, action: ChangeLetterStatusAction) => {\n    const sectionType = action.payload.sectionType as keyof typeof state;\n\n    const setSeenStatus = (letter: Letter) => {\n      if (action.payload.letterId === letter.id) {\n        letter.status.seen = true;\n      }\n      return letter;\n    };\n\n    if (Array.isArray(state[sectionType])) {\n      state[sectionType] = state[sectionType].map((section: MailboxSection) => {\n        if (section.id === action.payload.sectionId) {\n          section.letters = section.letters.map(setSeenStatus);\n        }\n        return section;\n      });\n      return;\n    }\n\n    state[sectionType].letters = state[sectionType].letters.map(setSeenStatus);\n  },\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport CyrillicToTranslit from \"cyrillic-to-translit-js\";\n\ninterface AddDigitAction {\n  (name: string): string;\n}\n\nconst setSectionData = (\n  string: string\n): { name: string; id: string; slug: string } => {\n  const newBoxId = CyrillicToTranslit().transform(string, \"_\").toLowerCase();\n  return {\n    name: string,\n    id: newBoxId,\n    slug: newBoxId,\n  };\n};\n\nconst digitSpaceRegex = /\\s\\d+$/gm;\nconst digitRegex = /\\d+$/gm;\n\nconst addDigitToName: AddDigitAction = (name) => {\n  const digitWithSpaceInName: RegExpMatchArray | null =\n    name.match(digitSpaceRegex);\n  if (digitWithSpaceInName) {\n    const nameWithoutDigit = name.replace(digitSpaceRegex, \"\");\n    return nameWithoutDigit + \" \" + (Number(digitWithSpaceInName[0]) + 1);\n  }\n  return name + \" \" + 1;\n};\n\nexport const sectionActions = {\n  addSection: (state: MailboxInitialState, action: Action) => {\n    const newSection = setSectionData(action.payload.name);\n    const newBox = {\n      ...newSection,\n      letters: [],\n    };\n    state.customSections = [...state.customSections, newBox];\n  },\n  deleteSection: (state: MailboxInitialState, action: Action) => {\n    state.customSections = state.customSections.filter(\n      (section: MailboxSection) => section.id !== action.payload.id\n    );\n  },\n  renameSection: (state: MailboxInitialState, action: Action) => {\n    state.customSections = state.customSections.map(\n      (section: MailboxSection) => {\n        if (section.id === action.payload.id) {\n          const updatedSection = setSectionData(action.payload.name);\n          section = { ...updatedSection, ...section.letters };\n        }\n        if (!section.letters) section.letters = [];\n        return section;\n      }\n    );\n  },\n  copySection: (state: MailboxInitialState, action: Action) => {\n    const customSections = state.customSections;\n\n    state.customSections = customSections.reduce(\n      (acc: Array<MailboxSection>, section: MailboxSection) => {\n        if (section.id !== action.payload.id) {\n          acc.push(section);\n          return acc;\n        }\n\n        acc.push(section);\n\n        const nameWithoutDigit = section.name.replace(digitSpaceRegex, \"\");\n\n        let sectionCopy = setSectionData(addDigitToName(section.name));\n\n        const sameSectionsDigits = state.customSections\n          .filter((section: MailboxSection) => {\n            const sectionName = sectionCopy.name.replace(digitSpaceRegex, \"\");\n            return section.name.includes(sectionName);\n          })\n          .map((section: MailboxSection) => {\n            const digit = section.name.match(digitSpaceRegex);\n            if (digit) return Number(digit[0]);\n            return 0;\n          })\n          .sort((a: number, b: number) => a - b);\n\n        if (sameSectionsDigits.length) {\n          const greatestNumber = sameSectionsDigits.reverse()[0];\n          const newName = addDigitToName(\n            nameWithoutDigit + \" \" + greatestNumber\n          );\n          sectionCopy = setSectionData(newName);\n        }\n\n        const letters = JSON.parse(JSON.stringify(section.letters));\n\n        const lettersNewIds = letters.map((letter: Letter) => {\n          letter.id = uuidv4();\n          return letter;\n        });\n\n        const copy = {\n          ...sectionCopy,\n          letters: lettersNewIds,\n        };\n\n        acc.push(copy);\n\n        return acc;\n      },\n      []\n    );\n  },\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  deleted,\n  drafts,\n  incomingLetters,\n  sentLetters,\n  spam,\n} from \"../../../assets/json\";\nimport { letterActions } from \"../../actions/letters/letter-actions\";\nimport { sectionActions } from \"../../actions/sections/section-actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst makeIdsUniqueInLetters = (letters: Array<Letter>) =>\n  letters.map((l) => {\n    l.id = uuidv4() + l.id + new Date().getTime();\n    return l;\n  });\n\nconst initialState: MailboxInitialState = {\n  incoming: {\n    name: \"входящие\",\n    id: \"incoming-0\",\n    letters: incomingLetters,\n    slug: \"incoming\",\n  },\n  sent: {\n    name: \"отправленные\",\n    id: \"sent-0\",\n    letters: sentLetters,\n    slug: \"sent\",\n  },\n  drafts: {\n    name: \"черновики\",\n    id: \"drafts-0\",\n    letters: drafts,\n    slug: \"drafts\",\n  },\n  deleted: {\n    name: \"удаленные\",\n    id: \"deleted-0\",\n    letters: deleted,\n    slug: \"deleted\",\n  },\n  spam: {\n    name: \"спам\",\n    id: \"spam-0\",\n    letters: spam,\n    slug: \"spam\",\n  },\n  customSections: [],\n};\n\nexport const mailboxSlice = createSlice({\n  name: \"mailbox\",\n  initialState,\n  reducers: {\n    ...letterActions,\n    ...sectionActions,\n  },\n});\n\nexport const mailboxActions = mailboxSlice.actions;\n\nexport default mailboxSlice.reducer;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport mailboxReducer from \"../reducers/mailbox/mailboxSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    mailbox: mailboxReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { useHistory } from \"react-router-dom\";\n\nexport const useGoBack = () => {\n  const history = useHistory();\n\n  return () => {\n    const slugs = history.location.pathname.split(\"/\");\n    const oneSlugBack = slugs.slice(0, slugs.length - 1);\n    const url = oneSlugBack.join(\"/\");\n    history.push(url);\n  };\n};\n","import styled from \"styled-components\";\n\nexport const ServiceButton = styled.button`\n  transition: all 0.2s ease;\n  cursor: pointer;\n  font-size: 1.6rem;\n  padding: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  background-color: rgba(0, 0, 0, 0.1);\n  /* border-radius: 10px; */\n  border: none;\n  font-weight: 600;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useGoBack } from \"../../lib/hooks/useGoBack\";\nimport { ServiceButton } from \"../UI/Buttons/ServiceButton/ServiceButton\";\n\nexport const NotFoundPage = () => {\n  const goBack = useGoBack();\n\n  return <NotFoundContainer>\n    <Heading>404!</Heading>\n    <ServiceButton onClick={goBack}>Вернуться назад!</ServiceButton>\n  </NotFoundContainer>\n};\n\nconst Heading = styled.h1`\n    margin-bottom: 2rem;\n`\n\nconst NotFoundContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    height: 100vh;\n`","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Link } from \"react-router-dom\";\nimport { ServiceButton } from \"../UI/Buttons/ServiceButton/ServiceButton\";\n\nexport const Home = () => {\n  return (\n    <HomeContainer>\n      <Block>\n        <Heading>Что умеет это приложение?</Heading>\n        <ul>\n          <li>Удалять письма</li>\n          <li>Перемещать письма</li>\n          <li>Читать письма</li>\n          <li>Создавать почтовые ящики</li>\n          <li>Копировать почтовые ящики</li>\n          <li>Удалять почтовые ящики</li>\n          <li>Сортировать почту по дате</li>\n          <li>Сортировать почту по статусу</li>\n          <li>Отображать статус письма (просмотрено или нет)</li>\n        </ul>\n      </Block>\n      <Block>\n        <Heading>Сделано с использованием: </Heading>\n        <ul>\n          <li>Typescript</li>\n          <li>Styled Components</li>\n          <li>Redux</li>\n        </ul>\n      </Block>\n      <Block>\n        <Heading>Линки: </Heading>\n        <ul>\n          <li>\n            <a href=\"https://github.com/dreamvibe1993/tot-mail-client\">Репозиторий</a>\n          </li>\n          <li>\n            <a href=\"https://dreamvibe1993.github.io/tot-mail-client/\">Деплой</a>\n          </li>\n        </ul>\n      </Block>\n      <Block>\n        <Heading>Я: </Heading>\n        <ul>\n          <li>\n            <a href=\"https://georgy-apraksin.space/\">Сайт</a>\n          </li>\n          <li>\n            <a href=\"https://t.me/georgy_apraksin\">Телега</a>\n          </li>\n          <li>\n            <a href=\"mailto:georgy.apraksin@gmail.com\">Почта</a>\n          </li>\n          <li>\n            <a href=\"tel:+79222172233\">Телефон</a>\n          </li>\n        </ul>\n      </Block>\n      <Link to={\"/mailbox\"}>\n        <ServiceButton>УЗРЕТЬ!</ServiceButton>\n      </Link>\n    </HomeContainer>\n  );\n};\n\nconst Heading = styled.h1`\n  text-align: center;\n  margin: .5rem 0rem;\n`;\n\nconst Block = styled.div`\n  width: 50%;\n  font-size: 1.6rem;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst HomeContainer = styled.div`\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  a {\n    text-decoration: underline;\n  }\n  li {\n    font-size: 1.8rem;\n  }\n`;\n","import { keyframes } from \"styled-components\";\n\nexport const fadeIn = keyframes`\n    from {\n        opacity: 0;\n    }\n    to { \n        opacity: 1;\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { fadeIn } from \"../../css/animations/fade-in\";\nimport Watches from \"../../assets/images/gif/watches-0.gif\";\n\nexport const FakeLoader = () => {\n  const [text, setText] = React.useState<string>(\"⏳Loading\");\n  const history = useHistory();\n\n  const intervalId = React.useRef<ReturnType<typeof setInterval>>();\n  const timerId1 = React.useRef<ReturnType<typeof setTimeout>>();\n  const timerId2 = React.useRef<ReturnType<typeof setTimeout>>();\n  const timerId3 = React.useRef<ReturnType<typeof setTimeout>>();\n  const counter = React.useRef<number>(0);\n\n  React.useEffect(() => {\n    intervalId.current = setInterval(() => {\n      ++counter.current;\n      if (counter.current % 4 === 0) {\n        setText(\"⏳Loading\");\n      } else {\n        setText((prev) => prev + \".\");\n      }\n    }, 400);\n    timerId1.current = setTimeout(() => {\n      setText(\"You've got ✉️✉️✉️!\");\n      window.clearInterval(intervalId.current);\n    }, 5000);\n    timerId2.current = setTimeout(() => {\n      setText(\"Redirecting...📩\");\n    }, 6000);\n    timerId3.current = setTimeout(() => {\n      history.push(\"/mailbox/incoming\");\n    }, 7000);\n    return () => {\n      window.clearInterval(intervalId.current);\n      window.clearTimeout(timerId1.current);\n      window.clearTimeout(timerId2.current);\n      window.clearTimeout(timerId3.current);\n    };\n  }, []);\n\n  return (\n    <FakeLoaderContainer>\n      <TextWrapper>{text}</TextWrapper>\n      <ImgWrapper>\n        <img src={Watches} alt=\"it might take time\" />\n      </ImgWrapper>\n    </FakeLoaderContainer>\n  );\n};\n\nconst ImgWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    img {\n      object-fit: contain;\n      width: 100%;\n      height: 100%;\n    }\n    justify-content: flex-start;\n    align-items: flex-start;\n    height: calc(100% - 5.5rem - 2rem);\n  }\n`;\n\nconst TextWrapper = styled.div`\n  text-align: left;\n  width: 100%;\n\n  @media (max-width: 425px) {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst FakeLoaderContainer = styled.div`\n  height: 100%;\n  font-size: 2.4rem;\n  animation: ${fadeIn} 0.5s linear;\n  font-weight: 500;\n  padding: 2rem;\n`;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store/store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled from \"styled-components\";\n\nexport const CursorWrap = styled.div`\n    cursor: pointer;\n`","import React, { ChangeEvent } from \"react\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { BsX as BsXLg } from \"react-icons/bs\";\n\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks/hooks\";\nimport { MailboxSections } from \"../../models/types/enums/mailbox-sections\";\nimport { mailboxActions } from \"../../redux/reducers/mailbox/mailboxSlice\";\nimport { CursorWrap } from \"../UI/Wraps/CursorWrap\";\nimport { useGoBack } from \"../../lib/hooks/useGoBack\";\n\ninterface LetterProps {\n  sectionType: MailboxSections;\n}\n\nexport const Letter: React.FC<LetterProps> = ({ sectionType }) => {\n  const { incoming, sent, drafts, deleted, spam, customSections } =\n    useAppSelector((state) => state.mailbox);\n  const mailboxSections = useAppSelector((state) => state.mailbox);\n  const sections = useAppSelector((state) => state.mailbox);\n  const dispatch = useAppDispatch();\n  const params: { id: string; customSectionId: string } = useParams();\n  const closeLetter = useGoBack();\n\n  const [letter, setLetter] = React.useState<Letter | undefined>();\n\n  const findLetter = React.useCallback(\n    function (letters: Array<Letter>): Letter | undefined {\n      return letters.find((letter: Letter) => letter.id === params.id);\n    },\n    [params.id]\n  );\n\n  React.useEffect(() => {\n    if (!letter) return;\n    dispatch(\n      mailboxActions.changeLetterStatus({\n        sectionType,\n        sectionId: params.customSectionId,\n        letterId: letter.id,\n      })\n    );\n  }, [letter]);\n\n  React.useEffect(() => {\n    if (!params.id) return;\n    let letter;\n    if (sectionType === MailboxSections.incoming) {\n      letter = findLetter(incoming.letters);\n    }\n    if (sectionType === MailboxSections.sent) {\n      letter = findLetter(sent.letters);\n    }\n    if (sectionType === MailboxSections.drafts) {\n      letter = findLetter(drafts.letters);\n    }\n    if (sectionType === MailboxSections.deleted) {\n      letter = findLetter(deleted.letters);\n    }\n    if (sectionType === MailboxSections.spam) {\n      letter = findLetter(spam.letters);\n    }\n    if (sectionType === MailboxSections.custom) {\n      letter = findLetter(\n        (() => {\n          const section = customSections.find(\n            (section: MailboxSection) => section.id === params.customSectionId\n          );\n          if (section) return section.letters;\n          else return [];\n        })()\n      );\n    }\n    if (letter) setLetter(letter);\n    else closeLetter();\n  }, [\n    deleted.letters,\n    drafts.letters,\n    incoming.letters,\n    sent.letters,\n    spam.letters,\n    params.id,\n    sectionType,\n    findLetter,\n  ]);\n\n  function moveLetter(e: ChangeEvent<HTMLSelectElement>) {\n    const sectionTypeTo = e.target.value;\n    let sectionFrom = mailboxSections[sectionType];\n    if (sectionType === MailboxSections.custom) {\n      sectionFrom = mailboxSections[sectionType].find(\n        (section: MailboxSection) => section.id === params.customSectionId\n      );\n    }\n    if (!letter) return console.error(\"No letter in Letter.tsx\");\n    dispatch(\n      mailboxActions.moveLetter({\n        from: { sectionType, section: sectionFrom },\n        letter,\n        to: { sectionType: sectionTypeTo },\n      })\n    );\n  }\n\n\n  if (!letter) return <span>Loading...</span>;\n\n  return (\n    <>\n      <WindowControls>\n        <CursorWrap>\n          <BsXLg onClick={closeLetter} />\n        </CursorWrap>\n      </WindowControls>\n      <LetterWindowContainer>\n        <TopBar>\n          <UserPersonal>\n            <Avatar />\n            <Creds>\n              <Name>{letter.sender.name}</Name>\n              <Email>{letter.sender.email}</Email>\n            </Creds>\n          </UserPersonal>\n          <Controls>\n            <Select name=\"select\" onChange={moveLetter}>\n              <option>Переместить в...</option>\n              {Object.values(sections).map(\n                (sec: MailboxSection, i) =>\n                  !Array.isArray(sec) && (\n                    <option key={sec.id} value={Object.keys(sections)[i]}>\n                      {sec.name}\n                    </option>\n                  )\n              )}\n              {customSections.map((sec: MailboxSection) => (\n                <option key={sec.id} value={sec.id}>\n                  {sec.name}\n                </option>\n              ))}\n            </Select>\n          </Controls>\n        </TopBar>\n        <LetterContainer>\n          <LetterLayout>\n            <ReactMarkdown>{letter.message}</ReactMarkdown>\n          </LetterLayout>\n        </LetterContainer>\n      </LetterWindowContainer>\n    </>\n  );\n};\n\nconst LetterWindowContainer = styled.div`\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  height: 100%;\n  overflow-y: auto;\n  flex: 1;\n  @media (max-width: 425px) {\n    padding: 0.5rem;\n  }\n`;\n\nconst WindowControls = styled.div`\n  height: 2rem;\n  margin-bottom: 1rem;\n  svg {\n    width: 2rem;\n    height: 100%;\n  }\n`;\n\nconst Select = styled.select`\n  padding: 1rem;\n`;\n\nconst LetterLayout = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 2rem;\n  background-color: white;\n  box-shadow: 0px 5px 5px 2px rgba(0, 0, 0, 0.1);\n\n  p {\n    font-size: 1.8rem;\n  }\n`;\n\nconst LetterContainer = styled.div`\n  flex: 1;\n  padding-top: 2rem;\n  overflow-y: auto;\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  align-items: flex-start;\n  svg {\n    width: 1.5rem;\n    height: 100%;\n  }\n  & > * {\n    &:not(:last-child) {\n      margin-right: 1rem;\n    }\n  }\n`;\n\nconst Email = styled.span`\n  font-size: 1.4rem;\n`;\n\nconst Name = styled.span``;\n\nconst Creds = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 2.4rem;\n  margin-left: 2rem;\n`;\n\nconst UserPersonal = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Avatar = styled.div`\n  width: 8rem;\n  height: 8rem;\n  border-radius: 100%;\n  background-color: gray;\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media (max-width: 425px) {\n    flex-direction: column;\n    align-items: center;\n    & > * {\n      margin-top: 1rem;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const SpanWithOverflow = styled.span`\n  display: block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { BsFillTrash2Fill } from \"react-icons/bs\";\nimport { BsCheck2 } from \"react-icons/bs\";\n\nimport { SpanWithOverflow } from \"../UI/Spans/SpanWithOverflow\";\nimport { useAppDispatch } from \"../../redux/hooks/hooks\";\nimport { mailboxActions } from \"../../redux/reducers/mailbox/mailboxSlice\";\nimport { MailboxSections } from \"../../models/types/enums/mailbox-sections\";\nimport { CursorWrap } from \"../UI/Wraps/CursorWrap\";\n\ninterface LetterTabProps {\n  letter: Letter;\n  sectionType: MailboxSections;\n  section: MailboxSection;\n  onCheck: Dispatch<SetStateAction<Letter[]>>;\n  isChecked: boolean;\n}\n\nexport const LetterTab: React.FC<LetterTabProps> = ({\n  letter,\n  sectionType,\n  section,\n  onCheck = () => {},\n  isChecked = false,\n}) => {\n  const dispatch = useAppDispatch();\n  const { url } = useRouteMatch();\n\n  function deleteLetter(): void {\n    dispatch(\n      mailboxActions.deleteLetter({ id: letter.id, sectionType, section })\n    );\n  }\n\n  function toggleCheckbox(): void {\n    onCheck((prev) => {\n      if (prev.includes(letter)) {\n        return prev.filter(\n          (checkedLetter: Letter) => checkedLetter.id !== letter.id\n        );\n      } else {\n        return [...new Set([...prev, letter])];\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    return () => {\n      onCheck([]);\n    };\n  }, []);\n\n  if (!letter) return <span>Something went wrong...</span>;\n\n  return (\n    <LetterTabContainer>\n      <Status seen={letter.status.seen}>\n        <StatusWord>{letter.status.seen ? \"seen\" : \"new\"}</StatusWord>\n        <StatusIndicator seen={letter.status.seen} />\n      </Status>\n      <VerticalDivider />\n      <div>\n        <Checkbox checked={isChecked} onClick={toggleCheckbox}>\n          {isChecked && <BsCheck2 />}\n        </Checkbox>\n      </div>\n      <VerticalDivider />\n      <Creds>\n        <From>\n          <Link to={`${url}/${letter.id}`}>{letter.sender.name}</Link>\n        </From>\n\n        <Email>{letter.sender.email}</Email>\n      </Creds>\n      <VerticalDivider />\n      <Topic>{letter.topic}</Topic>\n      <VerticalDivider />\n      <Preview>\n        <Link to={`${url}/${letter.id}`}>{letter.message}</Link>\n      </Preview>\n      <VerticalDivider />\n      <Actions>\n        <CursorWrap>\n          <BsFillTrash2Fill onClick={deleteLetter} />\n        </CursorWrap>\n      </Actions>\n      <VerticalDivider />\n      <SentAt>\n        {new Date(letter.receivedAt).toLocaleString(\"default\", {\n          weekday: \"short\",\n        }) + \" \"}\n        {new Date(letter.receivedAt).getHours()}:\n        {new Date(letter.receivedAt).getMinutes()}\n      </SentAt>\n    </LetterTabContainer>\n  );\n};\n\ninterface StatusProps {\n  seen: boolean;\n}\n\nconst StatusIndicator = styled.div<StatusProps>`\n  display: none;\n  width: 1rem;\n  height: 1rem;\n  border-radius: 100%;\n  background-color: ${(p) => (p.seen ? \"rgba(0,0,0,.3)\" : \"green\")};\n  @media (max-width: 425px) {\n    display: block;\n  }\n`;\n\nconst StatusWord = styled.span`\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\nconst Status = styled.span<StatusProps>`\n  font-weight: 600;\n  color: ${(p) => (p.seen ? \"rgba(0,0,0,.3)\" : \"green\")};\n  @media (max-width: 425px) {\n    /* margin-right: .5rem; */\n  }\n`;\n\nconst VerticalDivider = styled.div`\n  height: 50%;\n  border-right: 1px solid gray;\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\nconst Creds = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 0 2rem !important;\n  width: 12%;\n  @media (max-width: 425px) {\n    padding: 0 !important;\n    min-width: 8rem;\n  }\n`;\n\nconst Preview = styled(SpanWithOverflow)`\n  flex: 1;\n  color: gray;\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\ninterface CheckboxProps {\n  checked: boolean;\n}\n\nconst Checkbox = styled.div<CheckboxProps>`\n  width: 2rem;\n  height: 2rem;\n  border: 1px solid gray;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  /* background-color: ${(p) => p.checked && \"rgba(0,0,0,.1)\"}; */\n  @media (max-width: 425px) {\n    width: 1.3rem;\n    height: 1.3rem;\n  }\n`;\n\nconst From = styled(SpanWithOverflow)`\n  font-weight: 500;\n  @media (max-width: 425px) {\n    width: 100%;\n    text-align: center;\n  }\n`;\n\nconst Email = styled(SpanWithOverflow)`\n  color: gray;\n  font-size: 1.4rem;\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\nconst SentAt = styled(SpanWithOverflow)`\n  min-width: 8.7rem;\n  text-align: center;\n  @media (max-width: 425px) {\n    width: 5rem;\n  }\n`;\n\nconst Topic = styled(SpanWithOverflow)`\n  width: 12%;\n  text-align: center;\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\nconst Actions = styled.span`\n  display: flex;\n  justify-content: center;\n`;\n\nconst LetterTabContainer = styled.div`\n  border: 1px solid grey;\n  border-radius: 15px;\n  padding: 2rem 2rem;\n  display: flex;\n  align-items: center;\n  & > * {\n    &:nth-child(odd) {\n      padding: 0 1rem;\n    }\n  }\n  @media (max-width: 425px) {\n    padding: 1rem 1rem;\n    font-size: 1.6rem;\n    justify-content: space-between;\n    overflow: hidden;\n    & > * {\n      &:not(:last-child) {\n        padding: 0;\n        margin: 0.5rem;\n      }\n      &:last-child {\n        padding: 0;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fadeIn } from \"../../../css/animations/fade-in\";\n\nexport const DropdownMenu: React.FC<DropdownMenuProps> = ({\n  children,\n  options = [],\n}) => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const [x, setX] = React.useState<number>(0);\n  const [y, setY] = React.useState<number>(0);\n  const thisElementId = React.useRef(\n    `options-dropdown-id_${new Date().getTime()}`\n  );\n\n  const childrenRef = React.useRef<HTMLDivElement>(null);\n  const selfRef = React.useRef<HTMLDivElement>(null);\n\n  const closeDropdown = React.useCallback(\n    (e: MouseEvent) => {\n      const target = e.target as Element;\n      if (target.id !== thisElementId.current) {\n        if (isOpen) setIsOpen(false);\n      }\n    },\n    [isOpen]\n  );\n\n  const openDropdown = () => {\n    setIsOpen(true);\n    setDropdownCoords();\n  };\n\n  async function setDropdownCoords() {\n    const { current: childWrapperRef } = childrenRef;\n    const { current: dropdownRef } = selfRef;\n    if (!childWrapperRef || !dropdownRef) {\n      return console.error(\"Could not get refs in dropdown.\");\n    }\n\n    dropdownRef.style.opacity = \"0\";\n\n    const dropdown: DOMRect = dropdownRef.getBoundingClientRect();\n\n    if (!dropdown.height) {\n      setTimeout(() => {\n        setDropdownCoords();\n      }, 0);\n      return;\n    }\n\n    const child: DOMRect = childWrapperRef.getBoundingClientRect();\n\n    let y = child.y + child.height;\n    let x = child.x + child.width;\n\n    dropdownRef.style.opacity = \"1\";\n\n    if (window.innerWidth < 425) {\n      const onePercent = window.innerHeight / 100;\n      const seventyFive = onePercent * 75;\n      x += seventyFive;\n      y -= 55; // header height  \n    }\n    \n    if (y + dropdown.height >= window.innerHeight) {\n      y = child.y - dropdown.height;\n    }\n    if (x + dropdown.width >= window.innerWidth) {\n      x = child.x - dropdown.width;\n    }\n    \n\n    setY(y);\n    setX(x);\n  }\n\n  React.useEffect(() => {\n    window.addEventListener(\"click\", closeDropdown);\n    return () => {\n      window.removeEventListener(\"click\", closeDropdown);\n    };\n  }, [closeDropdown]);\n\n  if (!options.length) return null;\n\n  return (\n    <DropdownWrapper onClick={openDropdown} id={thisElementId.current}>\n      <ChildrenWrapper ref={childrenRef}>{children}</ChildrenWrapper>\n      <Dropdown x={x} y={y} ref={selfRef} isOpen={isOpen}>\n        {options.map((o, i) => (\n          <div key={o.name + i} onClick={() => o.handler()}>\n            {o.name}\n          </div>\n        ))}\n      </Dropdown>\n    </DropdownWrapper>\n  );\n};\n\nconst ChildrenWrapper = styled.div`\n  pointer-events: none;\n  animation: ${fadeIn} 0.1s linear forwards;\n`;\n\ninterface DropdownProps {\n  x: number;\n  y: number;\n  isOpen: boolean;\n}\n\nconst Dropdown = styled.div<DropdownProps>`\n  transition: opacity 0.1s ease;\n  position: fixed;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  /* box-shadow: 0px 0px 5px 2px rgba(0, 0, 0, 0.2); */\n  transform: ${(p) => `translate(${p.x}px, ${p.y}px)`};\n  display: ${(p) => (p.isOpen ? \"initial\" : \"none\")};\n  & > * {\n    padding: 0.5rem;\n    cursor: pointer;\n    user-select: none;\n    transition: background-color 0.15s ease;\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n  }\n  @media (max-width: 425px) {\n    /* transform: ${(p) => `translate(calc(${p.x}px + 75%), calc(${p.y - 55}px))`}; */\n  }\n`;\n\nconst DropdownWrapper = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nimport { useAppSelector } from \"../../redux/hooks/hooks\";\n\nimport { LetterTab } from \"../Letter/LetterTab\";\nimport { ServiceButton } from \"../UI/Buttons/ServiceButton/ServiceButton\";\n\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport RidingTrain from \"../../assets/images/gif/riding-train-0.gif\";\n\nimport { MailboxSections } from \"../../models/types/enums/mailbox-sections\";\nimport { DropdownMenu } from \"../UI/Dropdowns/DropdownMenu\";\nimport { mailboxActions } from \"../../redux/reducers/mailbox/mailboxSlice\";\nimport { fadeIn } from \"../../css/animations/fade-in\";\nimport { SpanWithOverflow } from \"../UI/Spans/SpanWithOverflow\";\n\ninterface MailboxSectionProps {\n  sectionType: MailboxSections;\n}\n\nexport const MailboxSection: React.FC<MailboxSectionProps> = ({\n  sectionType,\n}) => {\n  const { incoming, sent, deleted, drafts, spam, customSections } =\n    useAppSelector((state) => state.mailbox);\n  const mailboxSections = useAppSelector((state) => state.mailbox);\n  const dispatch = useDispatch();\n  const params: { customSectionId: string } = useParams();\n  const history = useHistory();\n\n  const [mail, setMail] = React.useState<Array<Letter>>([]);\n  const [section, setSection] = React.useState<MailboxSection | null>();\n  const [checkedLetters, setCheckedLetters] = React.useState<Array<Letter>>([]);\n\n  const goToIncoming = (errMessage: string) => {\n    history.push(\"/mailbox/incoming\");\n    console.error(errMessage);\n  };\n\n  React.useEffect(() => {\n    if (sectionType === MailboxSections.custom) {\n      if (!params.customSectionId)\n        return console.error(\"No custom section id in mailbox!\");\n\n      if (!customSections.length)\n        return goToIncoming(\"No custom sections in mailbox!\");\n\n      const section = customSections.find(\n        (section: MailboxSection) => section.id === params.customSectionId\n      );\n\n      if (!section) return goToIncoming(\"No custom section in mailbox!\");\n\n      setMail(section.letters);\n      setSection(section);\n    } else {\n      const section = mailboxSections[sectionType];\n      if (!section) return goToIncoming(\"No custom section in mailbox!\");\n      setMail(section.letters);\n      setSection(mailboxSections[sectionType]);\n    }\n  }, [\n    deleted,\n    drafts,\n    incoming,\n    sent,\n    spam,\n    sectionType,\n    params.customSectionId,\n    customSections,\n  ]);\n\n  const deleteCheckedLetters = () => {\n    if (!section) return console.error(\"No section on Mailbox.tsx\");\n    if (sectionType === MailboxSections.deleted) {\n      checkedLetters.forEach((letter: Letter) => {\n        dispatch(\n          mailboxActions.deleteLetter({\n            sectionType,\n            id: letter.id,\n          })\n        );\n      });\n      setCheckedLetters([]);\n    } else {\n      moveLettersTo(MailboxSections.deleted);\n    }\n  };\n\n  const moveLettersTo = (where: string) => {\n    if (!section) return console.error(\"No section on Mailbox.tsx\");\n    checkedLetters.forEach((letter: Letter) => {\n      dispatch(\n        mailboxActions.moveLetter({\n          from: {\n            sectionType,\n            section,\n          },\n          letter,\n          to: { sectionType: where },\n        })\n      );\n      setCheckedLetters([]);\n    });\n  };\n\n  const sortLettersByDate = () => {\n    uncheckAll()\n    setMail((letters) =>\n      JSON.parse(JSON.stringify(letters)).sort((a: Letter, b: Letter) => {\n        return (\n          new Date(a.receivedAt).getTime() - new Date(b.receivedAt).getTime()\n        );\n      })\n    );\n  };\n\n  const sortLettersByStatus = () => {\n    uncheckAll()\n    setMail((letters) =>\n      JSON.parse(JSON.stringify(letters)).sort((a: Letter, b: Letter) => {\n        if (a.status.seen) return 1;\n        if (!a.status.seen) return -1;\n        return 0;\n      })\n    );\n  };\n\n  const checkAll = () => {\n    setCheckedLetters(mail);\n  };\n\n  const uncheckAll = () => {\n    setCheckedLetters([]);\n  };\n\n  const handlers = {\n    delete: {\n      name:\n        sectionType === MailboxSections.deleted\n          ? \"Удалить навсегда\"\n          : \"Удалить отмеченные\",\n      handler: () => {\n        deleteCheckedLetters();\n        if (sectionType === MailboxSections.deleted) {\n          toast.success(\"Письма удалены из вашей почты!\");\n        } else {\n          toast.success('Письма перемещены в папку \"удаленные\".');\n        }\n      },\n    },\n    spam: {\n      name: \"Переместить в спам\",\n      handler: () => {\n        moveLettersTo(MailboxSections.spam);\n        toast.success('Письма перемещены в папку \"спам\".');\n      },\n    },\n    incoming: {\n      name: \"Переместить во входящие\",\n      handler: () => {\n        toast.success('Письма перемещены в папку \"входящие\".');\n        moveLettersTo(MailboxSections.incoming);\n      },\n    },\n  };\n\n  function returnMenuOptions(): Array<DropdownMenuOption> {\n    if (!checkedLetters.length) return [];\n    const customSectionsHandlers = customSections\n      .map((sec: MailboxSection) => ({\n        name: `Переместить в ${sec.name}`,\n        handler: () => {\n          moveLettersTo(sec.id);\n          toast.success(`Письма перемещены в папку \"${sec.name}\".`);\n        },\n      }))\n      .filter(Boolean);\n\n    if (sectionType === MailboxSections.incoming) {\n      return [handlers.delete, handlers.spam, ...customSectionsHandlers];\n    }\n    if (sectionType === MailboxSections.sent) {\n      return [handlers.delete, ...customSectionsHandlers];\n    }\n    if (sectionType === MailboxSections.drafts) {\n      return [handlers.delete, ...customSectionsHandlers];\n    }\n    if (sectionType === MailboxSections.spam) {\n      return [handlers.delete, ...customSectionsHandlers];\n    }\n    if (sectionType === MailboxSections.deleted) {\n      return [handlers.delete, ...customSectionsHandlers];\n    }\n    return [...customSectionsHandlers, handlers.delete];\n  }\n\n  const TopBarComponent = () => {\n    return (\n      <TopBar>\n        <MailboxName>\n          <SpanWithOverflow>\n            {section && section.name.toUpperCase()}\n          </SpanWithOverflow>\n        </MailboxName>\n        <Controls>\n          {!!mail.length && (\n            <ServiceButton\n              onClick={\n                checkedLetters.length === mail.length ? uncheckAll : checkAll\n              }\n            >\n              {checkedLetters.length === mail.length\n                ? \"Uncheck all\"\n                : \"Check all\"}\n            </ServiceButton>\n          )}\n          <ServiceButton onClick={sortLettersByDate}>\n            Sort by date\n          </ServiceButton>\n          <ServiceButton onClick={sortLettersByStatus}>\n            Sort by status\n          </ServiceButton>\n          <DropdownMenu options={[...returnMenuOptions()]}>\n            <ServiceButton>\n              <BsThreeDotsVertical />\n            </ServiceButton>\n          </DropdownMenu>\n        </Controls>\n      </TopBar>\n    );\n  };\n\n  if (!mail.length)\n    return (\n      <MailBoxContainer>\n        <TopBarComponent />\n        <EmptyPageWrap>\n          <h2 style={{ textAlign: \"center\" }}>This folder is empty</h2>\n          <ImgWrapper>\n            <Image src={RidingTrain} alt=\"This folder is empty\" />\n          </ImgWrapper>\n        </EmptyPageWrap>\n      </MailBoxContainer>\n    );\n\n  if (!section) return <span>Loading...</span>;\n\n  return (\n    <MailBoxContainer>\n      <TopBarComponent />\n      {mail.map((letter: Letter) => (\n        <LetterTab\n          letter={letter}\n          sectionType={sectionType}\n          section={section}\n          onCheck={setCheckedLetters}\n          isChecked={checkedLetters.includes(letter)}\n          key={letter.id}\n        />\n      ))}\n    </MailBoxContainer>\n  );\n};\n\nconst EmptyPageWrap = styled.div`\n  animation: ${fadeIn} 0.2s ease forwards;\n  max-height: 500px;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n`;\n\nconst ImgWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst MailboxName = styled.h2`\n  padding: 0;\n  margin: 0;\n  @media (max-width: 425px) {\n    max-width: 45%;\n  }\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  align-items: flex-start;\n  svg {\n    width: 2rem;\n    height: 100%;\n  }\n  button {\n    height: 4rem;\n  }\n  & > * {\n    &:not(:last-child) {\n      margin-right: 1rem;\n    }\n  }\n  @media (max-width: 425px) {\n    flex-direction: column;\n    align-items: flex-end;\n    & > * {\n      &:not(:last-child) {\n        margin-right: 0rem;\n        margin-bottom: 1rem;\n      }\n    }\n  }\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  min-height: 4rem;\n`;\n\nconst MailBoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > * {\n    &:not(:last-child) {\n      margin-bottom: 2rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { FakeLoader } from \"../../components/FakeLoader/FakeLoader\";\nimport { Letter } from \"../../components/Letter/Letter\";\nimport { MailboxSection } from \"../../components/MailboxSection/MailboxSection\";\nimport { MailboxSections } from \"../../models/types/enums/mailbox-sections\";\n\nexport const MailClientRoutes = () => {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${path}`} exact={true}>\n        <FakeLoader />\n      </Route>\n      <Route path={`${path}/incoming`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.incoming} />\n      </Route>\n      <Route path={`${path}/sent`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.sent} />\n      </Route>\n      <Route path={`${path}/deleted`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.deleted} />\n      </Route>\n      <Route path={`${path}/drafts`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.drafts} />\n      </Route>\n      <Route path={`${path}/spam`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.spam} />\n      </Route>\n      <Route path={`${path}/:customSectionId`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.custom} />\n      </Route>\n\n      <Route path={`${path}/incoming/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.incoming} />\n      </Route>\n      <Route path={`${path}/sent/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.sent} />\n      </Route>\n      <Route path={`${path}/deleted/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.deleted} />\n      </Route>\n      <Route path={`${path}/drafts/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.drafts} />\n      </Route>\n      <Route path={`${path}/spam/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.spam} />\n      </Route>\n      <Route path={`${path}/:customSectionId/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.custom} />\n      </Route>\n    </Switch>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ServiceInput = styled.input`\n  padding: 1rem;\n`;\n","import styled from \"styled-components\";\n\ninterface Props {\n  open: boolean;\n}\n\nexport const MenuTab: any = styled.div<Props>`\n  transition: transform 0.1s ease;\n  padding: 1rem;\n  border: 1px solid gray;\n  border-radius: ${(p) => p.open ? `15px 0px 0px 15px` : \"0\"};\n  font-size: 1.6rem;\n  background-color: white;\n  transform: ${(p) => p.open && `translateX(2.1rem)`};\n  border-right: ${(p) => p.open && `none`};\n  @media (max-width: 425px) {\n    transform: none;\n    border-right: 1px solid gray;\n    border-radius: 0rem;\n  }\n`;\n","import React from \"react\";\nimport { BsThreeDotsVertical, BsCheck2 } from \"react-icons/bs\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fadeIn } from \"../../../../css/animations/fade-in\";\nimport { useAppDispatch } from \"../../../../redux/hooks/hooks\";\nimport { mailboxActions } from \"../../../../redux/reducers/mailbox/mailboxSlice\";\nimport { ServiceButton } from \"../../Buttons/ServiceButton/ServiceButton\";\nimport { DropdownMenu } from \"../../Dropdowns/DropdownMenu\";\nimport { ServiceInput } from \"../../Inputs/ServiceInput\";\nimport { CursorWrap } from \"../../Wraps/CursorWrap\";\nimport { MenuTab } from \"../MenuTab\";\n\ninterface CustomSecMenuTabProps {\n  section: MailboxSection;\n}\n\nexport const CustomSectionMenuTab: React.FC<CustomSecMenuTabProps> = ({\n  section,\n}) => {\n  const { url } = useRouteMatch();\n  const dispatch = useAppDispatch();\n\n  const [isTabRenaming, setTabRenaming] = React.useState<boolean>(false);\n  const [newSectionName, setNewSectionName] = React.useState<string>(\"\");\n\n  const thisElementId = React.useRef(\n    `custom-section-tab-id_${new Date().getTime()}`\n  );\n\n  const stopTabRenaming = React.useCallback(\n    (e: MouseEvent) => {\n      const target = e.target as Element;\n      if (target.id !== thisElementId.current) {\n        if (isTabRenaming) setTabRenaming(false);\n      }\n    },\n    [isTabRenaming]\n  );\n\n  React.useEffect(() => {\n    window.addEventListener(\"click\", stopTabRenaming, true);\n    return () => {\n      window.removeEventListener(\"click\", stopTabRenaming, true);\n    };\n  }, [stopTabRenaming]);\n\n  function deleteNewSection(id: string): void {\n    dispatch(mailboxActions.deleteSection({ id }));\n    setNewSectionName(\"\");\n  }\n\n  function startRenamingTab(): void {\n    setTabRenaming(true);\n    setNewSectionName(section.name);\n  }\n\n  function renameTab(id: string): void {\n    if (!newSectionName.length) return;\n    dispatch(mailboxActions.renameSection({ name: newSectionName, id }));\n    setTabRenaming(false);\n    setNewSectionName(\"\");\n  }\n\n  function copyTab(id: string): void {\n    dispatch(mailboxActions.copySection({ id }));\n    setNewSectionName(\"\");\n  }\n  \n  return (\n    <CustomTab id={thisElementId.current}>\n      {isTabRenaming ? (\n        <TabNameInputs>\n          <SpecialInput\n            id={thisElementId.current}\n            type=\"text\"\n            placeholder=\"Type new section name\"\n            value={newSectionName.slice(0, 21)}\n            onChange={(e) => setNewSectionName(e.target.value)}\n            maxLength={20}\n          />\n          <ServiceButton\n            id={thisElementId.current}\n            onClick={() => renameTab(section.id)}\n          >\n            <div style={{ pointerEvents: \"none\", display: \"flex\", alignItems: \"center\" }}>\n              <BsCheck2 />\n            </div>\n          </ServiceButton>\n        </TabNameInputs>\n      ) : (\n        <Link to={`${url}/${section.slug}`}>{section.name}</Link>\n      )}\n      <DropdownMenu\n        options={[\n          {\n            name: \"удалить\",\n            handler: () => deleteNewSection(section.id),\n          },\n          { name: \"переименовать\", handler: () => startRenamingTab() },\n          { name: \"копировать\", handler: () => copyTab(section.id) },\n        ]}\n      >\n        <CursorWrap>\n          <BsThreeDotsVertical />\n        </CursorWrap>\n      </DropdownMenu>\n    </CustomTab>\n  );\n};\n\nconst SpecialInput = styled.input`\n  width: 70%;\n  margin-right: .5rem;\n  padding: 0;\n  border: none;\n  font-size: 1.6rem;\n  outline: none;\n  &::placeholder {\n    font-size: 1rem;\n  }\n`\n\nconst TabNameInputs = styled.div`\n  display: flex;\n  button {\n    padding: 0rem 1rem;\n  }\n`;\n\nconst CustomTab = styled(MenuTab)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  animation: ${fadeIn} .2s ease;\n  z-index: 1;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useRouteMatch, Link, useLocation } from \"react-router-dom\";\n\nimport { BsCheck2 } from \"react-icons/bs\";\n\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks/hooks\";\nimport { ServiceButton } from \"../UI/Buttons/ServiceButton/ServiceButton\";\nimport { ServiceInput } from \"../UI/Inputs/ServiceInput\";\nimport { CustomSectionMenuTab } from \"../UI/Tabs/CustomSectionMenuTab/CustomSectionMenuTab\";\nimport { mailboxActions } from \"../../redux/reducers/mailbox/mailboxSlice\";\nimport { MenuTab } from \"../UI/Tabs/MenuTab\";\nimport { SpanWithOverflow } from \"../UI/Spans/SpanWithOverflow\";\nimport { fadeIn } from \"../../css/animations/fade-in\";\n\nexport const DrawerMenu = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n  const mailboxSections = useAppSelector((state) => state.mailbox);\n  const dispatch = useAppDispatch();\n\n  const [newSectionName, setNewSectionName] = React.useState<string>(\"\");\n  const [drawerHeight, setDrawerHeight] = React.useState<number>(0);\n\n  const [isSectionNameInputOpen, setSectionNameInputOpen] =\n    React.useState<boolean>(false);\n\n  const CustomTabsScrollWrapper = React.useRef<HTMLDivElement>(null);\n\n  function openSectionNameInput(): void {\n    setSectionNameInputOpen(true);\n  }\n\n  function addNewSection(): void {\n    const { customSections } = mailboxSections;\n    const nonUniqueSection = customSections.find(\n      (section: MailboxSection) => section.name === newSectionName\n    );\n    if (nonUniqueSection) {\n      return console.error(`Section called ${newSectionName} already exists!`);\n    }\n    if (!newSectionName) return console.error(`No empty section name allowed!`);\n    dispatch(mailboxActions.addSection({ name: newSectionName }));\n    setNewSectionName(\"\");\n    setSectionNameInputOpen(false);\n  }\n\n  const addStylesIfScroll = React.useCallback(\n    function (): void {\n      const { current: tabsScrollWrap } = CustomTabsScrollWrapper;\n      if (!tabsScrollWrap) return;\n      if (tabsScrollWrap.scrollHeight > tabsScrollWrap.clientHeight) {\n        tabsScrollWrap.style.padding = \"1rem\";\n        tabsScrollWrap.style.backgroundColor = \"rgba(0,0,0,.1)\";\n        tabsScrollWrap.style.borderTop = \"1px solid rgba(0,0,0,.2)\";\n        tabsScrollWrap.style.borderBottom = \"1px solid rgba(0,0,0,.2)\";\n        tabsScrollWrap.style.borderRadius = \"5px\";\n      }\n    },\n    [CustomTabsScrollWrapper.current]\n  );\n\n  React.useEffect(() => {\n    const { current: tabsScrollWrap } = CustomTabsScrollWrapper;\n    if (!tabsScrollWrap) return;\n    setDrawerHeight(tabsScrollWrap.clientHeight);\n  }, []);\n\n  React.useEffect(() => {\n    window.addEventListener(\"click\", addStylesIfScroll);\n    return () => {\n      window.removeEventListener(\"click\", addStylesIfScroll);\n    };\n  }, []);\n\n  return (\n    <>\n      {Object.values(mailboxSections).map(\n        (section: MailboxSection) =>\n          !Array.isArray(section) && (\n            <Link key={section.id} to={`${url}/${section.slug}`}>\n              <MenuTab open={location.pathname === `${url}/${section.slug}`}>\n                <SpanWithOverflow>{section.name}</SpanWithOverflow>\n              </MenuTab>\n            </Link>\n          )\n      )}\n      <ServiceButton onClick={openSectionNameInput}>+ создать</ServiceButton>\n      {isSectionNameInputOpen && (\n        <SectionNameInputContainer>\n          <ServiceInput\n            type=\"text\"\n            placeholder=\"Type new section name\"\n            value={newSectionName.slice(0, 21)}\n            onChange={(e) => setNewSectionName(e.target.value)}\n            maxLength={20}\n          />\n          <ServiceButton onClick={addNewSection}>\n            <BsCheck2 />\n          </ServiceButton>\n        </SectionNameInputContainer>\n      )}\n      <CustomTabsScroll\n        ref={CustomTabsScrollWrapper}\n        onClick={addStylesIfScroll}\n        drawerHeight={drawerHeight}\n      >\n        <CustomTabsContainer>\n          {mailboxSections.customSections.map((section: MailboxSection) => (\n            <CustomSectionMenuTab key={section.id} section={section} />\n          ))}\n        </CustomTabsContainer>\n      </CustomTabsScroll>\n    </>\n  );\n};\n\nconst CustomTabsContainer = styled.div`\n  & > * {\n    &:not(:last-child) {\n      margin-bottom: 1rem;\n    }\n  }\n`;\n\ninterface CustomTabsScrollProps {\n  drawerHeight: number;\n}\n\nconst CustomTabsScroll = styled.div<CustomTabsScrollProps>`\n  flex: ${(p) => (p.drawerHeight ? \"none\" : 1)};\n  height: ${(p) => p.drawerHeight + \"px\" || \"none\"};\n  transition: all 0.2s ease;\n  overflow-y: auto;\n  &::-webkit-scrollbar {\n    width: 1rem;\n    background-color: transparent;\n    border: none;\n    padding-left: 0.5rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n    border: none;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(0, 0, 0, 0.2);\n    border: none;\n    border-radius: 1.5rem;\n  }\n  @media (max-width: 425px) {\n    height: calc(100vh / 2 - 5.5rem);\n  }\n`;\n\nconst SectionNameInputContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: stretch;\n  overflow: hidden;\n  animation: ${fadeIn} 0.2s ease;\n  button {\n    width: 30%;\n  }\n  input {\n    width: 70%;\n    margin-right: 1rem;\n    &::placeholder {\n      font-style: oblique;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { MailClientRoutes } from \"../../configs/routes/mail-client-routes\";\nimport { DrawerMenu } from \"../DrawerMenu/DrawerMenu\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { ServiceButton } from \"../UI/Buttons/ServiceButton/ServiceButton\";\n\nexport const MailClient: React.FC = () => {\n  const [isDrawerShow, setDrawerShow] = React.useState<boolean>(false);\n\n  function showDrawer() {\n    setDrawerShow(true);\n  }\n\n  function closeDrawer() {\n    setDrawerShow(false);\n  }\n\n  return (\n    <>\n      <Header>\n        <ServiceButton onClick={showDrawer}>\n          <GiHamburgerMenu />\n        </ServiceButton>\n      </Header>\n      <MailClientContainer>\n        <OpaqueScreen\n          isShow={isDrawerShow}\n          onClick={closeDrawer}\n        ></OpaqueScreen>\n        <Drawer isShow={isDrawerShow}>\n          <DrawerMenu />\n        </Drawer>\n        <Client>\n          <MailClientRoutes />\n        </Client>\n      </MailClientContainer>\n    </>\n  );\n};\n\ninterface DrawerProps {\n  isShow: boolean;\n}\n\nconst OpaqueScreen = styled.div<DrawerProps>`\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  display: none;\n  transition: opacity 0.5s ease;\n  opacity: ${(p) => (p.isShow ? \"1\" : \"0\")};\n  @media (max-width: 425px) {\n    display: block;\n    pointer-events: ${(p) => (p.isShow ? \"all\" : \"none\")};\n  }\n`;\n\nconst Header = styled.div`\n  display: none;\n  z-index: 11;\n  @media (max-width: 425px) {\n    position: sticky;\n    top: 0;\n    display: flex;\n    flex-direction: row-reverse;\n    padding: 1rem;\n    height: 5.5rem;\n    width: 100%;\n    background-color: #ececec;\n  }\n`;\n\nconst Client = styled.div`\n  grid-area: scrn;\n  width: 100%;\n  border: 1px solid gray;\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  overflow-y: auto;\n  @media (max-width: 425px) {\n    padding: 1rem;\n  }\n`;\n\nconst MailClientContainer = styled.div`\n  display: grid;\n  grid-template: \"drwr scrn\" 100% \"drwr scrn\" / 20% 80%;\n  width: 100%;\n  padding: 2rem;\n  height: 100vh;\n  @media (max-width: 425px) {\n    grid-template: \"scrn\" 100% \"scrn\" / 100%;\n    padding: 1rem;\n\n  }\n`;\n\nconst Drawer = styled.div<DrawerProps>`\n  grid-area: drwr;\n  display: flex;\n  flex-direction: column;\n  padding-right: 2rem;\n  & > * {\n    &:not(:last-child) {\n      margin-bottom: 1rem;\n    }\n  }\n  @media (max-width: 425px) {\n    position: fixed;\n    top: 5.5rem;\n    left: 0;\n    background-color: white;\n    height: ${window.innerHeight - 55}px;\n    width: 75%;\n    padding: 1rem;\n    transition: transform 0.5s ease;\n    transform: translateX(${(p) => (p.isShow ? \"0\" : \"-100%\")});\n    z-index: 11;\n  }\n`;\n","import React from \"react\";\nimport {\n  BrowserRouter,\n  HashRouter,\n  Link,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./App.css\";\nimport { NotFoundPage } from \"./components/404/404\";\nimport { Home } from \"./components/Home/Home\";\n\nimport { MailClient } from \"./components/MailClient/MailClient\";\n\n/**\n * TODO:\n */\n\nfunction App() {\n\n  return (\n    <HashRouter >\n      <ToastContainer autoClose={2500} closeOnClick />\n      <div className=\"App\">\n        <Switch>\n          <Route exact={true} path={\"/\"}>\n            <Home />\n          </Route>\n          <Route path={\"/mailbox\"}>\n            <MailClient />\n          </Route>\n          <Route>\n            <NotFoundPage />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store/store\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nconst container = document.getElementById(\"root\")!;\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}