{"version":3,"sources":["assets/images/gif/watches-0.gif","assets/images/gif/riding-train-0.gif","models/types/enums/mailbox-sections.ts","assets/json/index.ts","redux/actions/letters/letter-actions.ts","redux/actions/sections/section-actions.ts","redux/reducers/mailbox/mailboxSlice.ts","redux/store/store.ts","components/UI/Buttons/ServiceButton/ServiceButton.tsx","components/Home/Home.tsx","css/animations/fade-in.js","components/FakeLoader/FakeLoader.tsx","redux/hooks/hooks.ts","components/UI/Wraps/CursorWrap.js","components/Letter/Letter.tsx","components/UI/Spans/SpanWithOverflow.tsx","components/Letter/LetterTab.tsx","components/UI/Dropdowns/DropdownMenu.tsx","components/MailboxSection/MailboxSection.tsx","configs/routes/mail-client-routes.tsx","components/UI/Inputs/ServiceInput.tsx","components/UI/Tabs/MenuTab.tsx","components/UI/Tabs/CustomSectionMenuTab/CustomSectionMenuTab.tsx","components/DrawerMenu/DrawerMenu.tsx","components/MailClient/MailClient.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","MailboxSections","incomingLetters","sentLetters","deleted","drafts","spam","letterActions","deleteLetter","state","action","payload","sectionType","incoming","letters","filter","letter","id","sent","custom","customSections","map","sec","section","moveLetter","from","to","updatedLetters","concat","Object","toConsumableArray","changeLetterStatus","setSeenStatus","letterId","status","seen","Array","isArray","sectionId","setSectionData","string","newBoxId","CyrillicToTranslit","transform","toLowerCase","name","slug","digitSpaceRegex","addDigitToName","digitWithSpaceInName","match","replace","Number","sectionActions","addSection","newSection","newBox","objectSpread","deleteSection","renameSection","updatedSection","copySection","reduce","acc","push","nameWithoutDigit","sectionCopy","sameSectionsDigits","sectionName","includes","digit","sort","a","b","length","greatestNumber","reverse","newName","lettersNewIds","JSON","parse","stringify","uuidv4","copy","initialState","mailboxSlice","createSlice","reducers","mailboxActions","actions","store","configureStore","reducer","mailbox","mailboxReducer","ServiceButton","styled","button","_templateObject","taggedTemplateLiteral","Home","react_default","createElement","HomeContainer","Block","Heading","href","react_router_dom","h1","Home_templateObject","div","_templateObject2","_templateObject3","fadeIn","keyframes","fade_in_templateObject","FakeLoader","_React$useState","React","useState","_React$useState2","slicedToArray","text","setText","history","useHistory","intervalId","useRef","timerId1","timerId2","timerId3","counter","useEffect","current","setInterval","prev","setTimeout","window","clearInterval","clearTimeout","FakeLoaderContainer","TextWrapper","ImgWrapper","src","Watches","alt","FakeLoader_templateObject","FakeLoader_templateObject2","FakeLoader_templateObject3","useAppDispatch","useDispatch","useAppSelector","useSelector","CursorWrap","CursorWrap_templateObject","Letter","_ref","_useAppSelector","mailboxSections","sections","dispatch","params","useParams","setLetter","findLetter","useCallback","find","customSectionId","closeLetter","slugs","location","pathname","split","url","slice","join","Fragment","WindowControls","index_esm","onClick","LetterWindowContainer","TopBar","UserPersonal","Avatar","Creds","Name","sender","Email","email","Controls","Select","onChange","e","sectionTypeTo","target","value","sectionFrom","console","error","values","i","key","keys","LetterContainer","LetterLayout","react_markdown","message","Letter_templateObject","Letter_templateObject2","select","Letter_templateObject3","_templateObject4","_templateObject5","_templateObject6","span","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","SpanWithOverflow","SpanWithOverflow_templateObject","LetterTab","_ref$onCheck","onCheck","_ref$isChecked","isChecked","useRouteMatch","LetterTabContainer","Status","StatusWord","StatusIndicator","VerticalDivider","Checkbox","checked","checkedLetter","Set","LetterTab_Creds","From","LetterTab_Email","Topic","topic","Preview","Actions","SentAt","Date","receivedAt","toLocaleString","weekday","getHours","getMinutes","LetterTab_templateObject","LetterTab_templateObject2","LetterTab_templateObject3","LetterTab_templateObject4","LetterTab_templateObject5","LetterTab_templateObject6","LetterTab_templateObject7","LetterTab_templateObject8","LetterTab_templateObject9","LetterTab_templateObject10","LetterTab_templateObject11","LetterTab_templateObject12","_templateObject13","DropdownMenu","children","_ref$options","options","isOpen","setIsOpen","_React$useState3","_React$useState4","x","setX","_React$useState5","_React$useState6","y","setY","thisElementId","getTime","childrenRef","selfRef","closeDropdown","setDropdownCoords","_setDropdownCoords","apply","this","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","childWrapperRef","dropdownRef","dropdown","child","onePercent","wrap","_context","next","abrupt","style","opacity","getBoundingClientRect","height","width","innerWidth","innerHeight","stop","addEventListener","removeEventListener","DropdownWrapper","ChildrenWrapper","ref","Dropdown","o","handler","DropdownMenu_templateObject","DropdownMenu_templateObject2","DropdownMenu_templateObject3","MailboxSection","mail","setMail","setSection","checkedLetters","setCheckedLetters","goToIncoming","errMessage","moveLettersTo","where","forEach","sortLettersByDate","sortLettersByStatus","checkAll","uncheckAll","handlers","delete","deleteCheckedLetters","toast","success","returnMenuOptions","customSectionsHandlers","Boolean","TopBarComponent","MailboxSection_TopBar","MailboxName","toUpperCase","MailboxSection_Controls","DropdownMenu_DropdownMenu","MailBoxContainer","LetterTab_LetterTab","EmptyPageWrap","textAlign","MailboxSection_ImgWrapper","Image","RidingTrain","MailboxSection_templateObject","img","MailboxSection_templateObject2","MailboxSection_templateObject3","h2","MailboxSection_templateObject4","MailboxSection_templateObject5","MailboxSection_templateObject6","MailboxSection_templateObject7","MailClientRoutes","path","react_router","exact","FakeLoader_FakeLoader","MailboxSection_MailboxSection","Letter_Letter","ServiceInput","input","ServiceInput_templateObject","MenuTab","MenuTab_templateObject","open","CustomSectionMenuTab","isTabRenaming","setTabRenaming","newSectionName","setNewSectionName","stopTabRenaming","CustomTab","TabNameInputs","SpecialInput","type","placeholder","maxLength","pointerEvents","display","alignItems","CustomSectionMenuTab_templateObject","CustomSectionMenuTab_templateObject2","CustomSectionMenuTab_templateObject3","DrawerMenu","useLocation","drawerHeight","setDrawerHeight","isSectionNameInputOpen","setSectionNameInputOpen","CustomTabsScrollWrapper","addStylesIfScroll","tabsScrollWrap","scrollHeight","clientHeight","padding","backgroundColor","borderTop","borderBottom","borderRadius","SectionNameInputContainer","CustomTabsScroll","CustomTabsContainer","CustomSectionMenuTab_CustomSectionMenuTab","DrawerMenu_templateObject","DrawerMenu_templateObject2","DrawerMenu_templateObject3","MailClient","isDrawerShow","setDrawerShow","Header","gi_index_esm","MailClientContainer","OpaqueScreen","isShow","Drawer","DrawerMenu_DrawerMenu","Client","mail_client_routes_MailClientRoutes","MailClient_templateObject","MailClient_templateObject2","MailClient_templateObject3","MailClient_templateObject4","MailClient_templateObject5","App","react_toastify_esm","autoClose","closeOnClick","className","Home_Home","MailClient_MailClient","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","es","src_App"],"mappings":"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","file":"static/js/main.1aa1f4ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/watches-0.b5857434.gif\";","module.exports = __webpack_public_path__ + \"static/media/riding-train-0.656685f9.gif\";","/* eslint-disable no-unused-vars */\nexport enum MailboxSections {\n  incoming = \"incoming\",\n  sent = \"sent\",\n  drafts = \"drafts\",\n  deleted = \"deleted\",\n  spam = \"spam\",\n  custom = \"customSections\"\n}\n","import Letter1 from \"./letter-1.json\";\nimport Letter2 from \"./letter-2.json\";\nimport Letter3 from \"./letter-3.json\";\nimport Letter4 from \"./letter-4.json\";\nimport Letter5 from \"./letter-5.json\";\nimport Letter6 from \"./letter-6.json\";\nimport Letter7 from \"./letter-7.json\";\nimport Letter8 from \"./letter-8.json\";\nimport Letter9 from \"./letter-9.json\";\nimport Letter10 from \"./letter-10.json\";\nimport Letter11 from \"./letter-11.json\";\nimport Letter12 from \"./letter-12.json\";\nimport Letter13 from \"./letter-13.json\";\n\nexport const incomingLetters: Array<Letter> = [Letter1, Letter2, Letter3];\n\nexport const sentLetters: Array<Letter> = [Letter4, Letter5, Letter6];\n\nexport const deleted: Array<Letter> = [Letter7];\n\nexport const drafts: Array<Letter> = [Letter8, Letter9, Letter10];\n\nexport const spam: Array<Letter> = [Letter11, Letter12, Letter13];\n","import { MailboxSections } from \"../../../models/types/enums/mailbox-sections\";\n\ninterface MoveLetterAction {\n  payload: {\n    from: { sectionType: MailboxSections; section: MailboxSection };\n    letter: Letter;\n    to: { sectionType: string };\n  };\n  type: string;\n}\n\ninterface ChangeLetterStatusAction {\n  payload: {\n    sectionType: MailboxSections;\n    sectionId: string;\n    letterId: string;\n  };\n  type: string;\n}\n\nexport const letterActions = {\n  deleteLetter: (state: MailboxInitialState, action: Action) => {\n    if (action.payload.sectionType === MailboxSections.incoming) {\n      state.incoming.letters = state.incoming.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.sent) {\n      state.sent.letters = state.sent.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.drafts) {\n      state.drafts.letters = state.drafts.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.deleted) {\n      state.deleted.letters = state.deleted.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.spam) {\n      state.spam.letters = state.spam.letters.filter(\n        (letter: Letter) => letter.id !== action.payload.id\n      );\n    }\n    if (action.payload.sectionType === MailboxSections.custom) {\n      state.customSections = state.customSections.map((sec: MailboxSection) => {\n        if (sec.id === action.payload.section.id) {\n          sec.letters = sec.letters.filter(\n            (letter: Letter) => letter.id !== action.payload.id\n          );\n        }\n        return sec;\n      });\n    }\n  },\n  moveLetter: (state: MailboxInitialState, action: MoveLetterAction) => {\n    const from = action.payload.from.sectionType as keyof typeof state;\n    const to = action.payload.to.sectionType as keyof typeof state;\n    const letter = action.payload.letter;\n\n    if (from === MailboxSections.custom) {\n      state[from] = state[from].map((sec: MailboxSection) => {\n        if (sec.id === action.payload.from.section.id) {\n          sec.letters = sec.letters.filter(\n            (letter: Letter) => action.payload.letter.id !== letter.id\n          );\n        }\n        return sec;\n      });\n    } else {\n      // Not custom folders\n      state[from].letters = state[from].letters.filter(\n        (letter: Letter) => action.payload.letter.id !== letter.id\n      );\n    }\n\n    if (!state[to]) {\n      state.customSections = state.customSections.map((sec: MailboxSection) => {\n        if (sec.id === to) {\n          sec.letters = [...sec.letters, letter];\n        }\n        return sec;\n      });\n    } else {\n      // Not custom folders\n      const updatedLetters = [...state[to].letters, action.payload.letter];\n      state[to].letters = updatedLetters;\n    }\n  },\n  changeLetterStatus: (state: MailboxInitialState, action: ChangeLetterStatusAction) => {\n    const sectionType = action.payload.sectionType as keyof typeof state;\n\n    const setSeenStatus = (letter: Letter) => {\n      if (action.payload.letterId === letter.id) {\n        letter.status.seen = true;\n      }\n      return letter;\n    };\n\n    if (Array.isArray(state[sectionType])) {\n      state[sectionType] = state[sectionType].map((section: MailboxSection) => {\n        if (section.id === action.payload.sectionId) {\n          section.letters = section.letters.map(setSeenStatus);\n        }\n        return section;\n      });\n      return;\n    }\n\n    state[sectionType].letters = state[sectionType].letters.map(setSeenStatus);\n  },\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport CyrillicToTranslit from \"cyrillic-to-translit-js\";\n\ninterface AddDigitAction {\n  (name: string): string;\n}\n\nconst setSectionData = (\n  string: string\n): { name: string; id: string; slug: string } => {\n  const newBoxId = CyrillicToTranslit().transform(string, \"_\").toLowerCase();\n  return {\n    name: string,\n    id: newBoxId,\n    slug: newBoxId,\n  };\n};\n\nconst digitSpaceRegex = /\\s\\d+$/gm;\nconst digitRegex = /\\d+$/gm;\n\nconst addDigitToName: AddDigitAction = (name) => {\n  const digitWithSpaceInName: RegExpMatchArray | null =\n    name.match(digitSpaceRegex);\n  if (digitWithSpaceInName) {\n    const nameWithoutDigit = name.replace(digitSpaceRegex, \"\");\n    return nameWithoutDigit + \" \" + (Number(digitWithSpaceInName[0]) + 1);\n  }\n  return name + \" \" + 1;\n};\n\nexport const sectionActions = {\n  addSection: (state: MailboxInitialState, action: Action) => {\n    const newSection = setSectionData(action.payload.name);\n    const newBox = {\n      ...newSection,\n      letters: [],\n    };\n    state.customSections = [...state.customSections, newBox];\n  },\n  deleteSection: (state: MailboxInitialState, action: Action) => {\n    state.customSections = state.customSections.filter(\n      (section: MailboxSection) => section.id !== action.payload.id\n    );\n  },\n  renameSection: (state: MailboxInitialState, action: Action) => {\n    state.customSections = state.customSections.map(\n      (section: MailboxSection) => {\n        if (section.id === action.payload.id) {\n          const updatedSection = setSectionData(action.payload.name);\n          section = { ...updatedSection, ...section.letters };\n        }\n        if (!section.letters) section.letters = [];\n        return section;\n      }\n    );\n  },\n  copySection: (state: MailboxInitialState, action: Action) => {\n    const customSections = state.customSections;\n\n    state.customSections = customSections.reduce(\n      (acc: Array<MailboxSection>, section: MailboxSection) => {\n        if (section.id !== action.payload.id) {\n          acc.push(section);\n          return acc;\n        }\n\n        acc.push(section);\n\n        const nameWithoutDigit = section.name.replace(digitSpaceRegex, \"\");\n\n        let sectionCopy = setSectionData(addDigitToName(section.name));\n\n        const sameSectionsDigits = state.customSections\n          .filter((section: MailboxSection) => {\n            const sectionName = sectionCopy.name.replace(digitSpaceRegex, \"\");\n            return section.name.includes(sectionName);\n          })\n          .map((section: MailboxSection) => {\n            const digit = section.name.match(digitSpaceRegex);\n            if (digit) return Number(digit[0]);\n            return 0;\n          })\n          .sort((a: number, b: number) => a - b);\n\n        if (sameSectionsDigits.length) {\n          const greatestNumber = sameSectionsDigits.reverse()[0];\n          const newName = addDigitToName(\n            nameWithoutDigit + \" \" + greatestNumber\n          );\n          sectionCopy = setSectionData(newName);\n        }\n\n        const letters = JSON.parse(JSON.stringify(section.letters));\n\n        const lettersNewIds = letters.map((letter: Letter) => {\n          letter.id = uuidv4();\n          return letter;\n        });\n\n        const copy = {\n          ...sectionCopy,\n          letters: lettersNewIds,\n        };\n\n        acc.push(copy);\n\n        return acc;\n      },\n      []\n    );\n  },\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  deleted,\n  drafts,\n  incomingLetters,\n  sentLetters,\n  spam,\n} from \"../../../assets/json\";\nimport { letterActions } from \"../../actions/letters/letter-actions\";\nimport { sectionActions } from \"../../actions/sections/section-actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst makeIdsUniqueInLetters = (letters: Array<Letter>) =>\n  letters.map((l) => {\n    l.id = uuidv4() + l.id + new Date().getTime();\n    return l;\n  });\n\nconst initialState: MailboxInitialState = {\n  incoming: {\n    name: \"входящие\",\n    id: \"incoming-0\",\n    letters: incomingLetters,\n    slug: \"incoming\",\n  },\n  sent: {\n    name: \"отправленные\",\n    id: \"sent-0\",\n    letters: sentLetters,\n    slug: \"sent\",\n  },\n  drafts: {\n    name: \"черновики\",\n    id: \"drafts-0\",\n    letters: drafts,\n    slug: \"drafts\",\n  },\n  deleted: {\n    name: \"удаленные\",\n    id: \"deleted-0\",\n    letters: deleted,\n    slug: \"deleted\",\n  },\n  spam: {\n    name: \"спам\",\n    id: \"spam-0\",\n    letters: spam,\n    slug: \"spam\",\n  },\n  customSections: [],\n};\n\nexport const mailboxSlice = createSlice({\n  name: \"mailbox\",\n  initialState,\n  reducers: {\n    ...letterActions,\n    ...sectionActions,\n  },\n});\n\nexport const mailboxActions = mailboxSlice.actions;\n\nexport default mailboxSlice.reducer;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport mailboxReducer from \"../reducers/mailbox/mailboxSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    mailbox: mailboxReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import styled from \"styled-components\";\n\nexport const ServiceButton = styled.button`\n  transition: all 0.2s ease;\n  cursor: pointer;\n  font-size: 1.6rem;\n  padding: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  background-color: rgba(0, 0, 0, 0.1);\n  /* border-radius: 10px; */\n  border: none;\n  font-weight: 600;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Link } from \"react-router-dom\";\nimport { ServiceButton } from \"../UI/Buttons/ServiceButton/ServiceButton\";\n\nexport const Home = () => {\n  return (\n    <HomeContainer>\n      <Block>\n        <Heading>Что умеет это приложение?</Heading>\n        <ul>\n          <li>Удалять письма</li>\n          <li>Перемещать письма</li>\n          <li>Читать письма</li>\n          <li>Создавать почтовые ящики</li>\n          <li>Копировать почтовые ящики</li>\n          <li>Удалять почтовые ящики</li>\n          <li>Сортировать почту по дате</li>\n          <li>Сортировать почту по статусу</li>\n          <li>Отображать статус письма (просмотрено или нет)</li>\n        </ul>\n      </Block>\n      <Block>\n        <Heading>Сделано с использованием: </Heading>\n        <ul>\n          <li>Typescript</li>\n          <li>Styled Components</li>\n          <li>Redux</li>\n        </ul>\n      </Block>\n      <Block>\n        <Heading>Репозиторий проекта: </Heading>\n        <ul>\n          <li>\n            <a href=\"https://github.com/dreamvibe1993/tot-mail-client\">Github</a>\n          </li>\n        </ul>\n      </Block>\n      <Block>\n        <Heading>Я: </Heading>\n        <ul>\n          <li>\n            <a href=\"https://georgy-apraksin.space/\">Сайт</a>\n          </li>\n          <li>\n            <a href=\"https://t.me/georgy_apraksin\">Телега</a>\n          </li>\n          <li>\n            <a href=\"mailto:georgy.apraksin@gmail.com\">Почта</a>\n          </li>\n          <li>\n            <a href=\"tel:+79222172233\">Телефон</a>\n          </li>\n        </ul>\n      </Block>\n      <Link to={\"/mailbox\"}>\n        <ServiceButton>УЗРЕТЬ!</ServiceButton>\n      </Link>\n    </HomeContainer>\n  );\n};\n\nconst Heading = styled.h1`\n  text-align: center;\n  margin: .5rem 0rem;\n`;\n\nconst Block = styled.div`\n  width: 50%;\n  font-size: 1.6rem;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst HomeContainer = styled.div`\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  a {\n    text-decoration: underline;\n  }\n  li {\n    font-size: 1.8rem;\n  }\n`;\n","import { keyframes } from \"styled-components\";\n\nexport const fadeIn = keyframes`\n    from {\n        opacity: 0;\n    }\n    to { \n        opacity: 1;\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { fadeIn } from \"../../css/animations/fade-in\";\nimport Watches from \"../../assets/images/gif/watches-0.gif\";\n\nexport const FakeLoader = () => {\n  const [text, setText] = React.useState<string>(\"⏳Loading\");\n  const history = useHistory();\n\n  const intervalId = React.useRef<ReturnType<typeof setInterval>>();\n  const timerId1 = React.useRef<ReturnType<typeof setTimeout>>();\n  const timerId2 = React.useRef<ReturnType<typeof setTimeout>>();\n  const timerId3 = React.useRef<ReturnType<typeof setTimeout>>();\n  const counter = React.useRef<number>(0);\n\n  React.useEffect(() => {\n    intervalId.current = setInterval(() => {\n      ++counter.current;\n      if (counter.current % 4 === 0) {\n        setText(\"⏳Loading\");\n      } else {\n        setText((prev) => prev + \".\");\n      }\n    }, 400);\n    timerId1.current = setTimeout(() => {\n      setText(\"You've got ✉️✉️✉️!\");\n      window.clearInterval(intervalId.current);\n    }, 5000);\n    timerId2.current = setTimeout(() => {\n      setText(\"Redirecting...📩\");\n    }, 6000);\n    timerId3.current = setTimeout(() => {\n      history.push(\"/mailbox/incoming\");\n    }, 7000);\n    return () => {\n      window.clearInterval(intervalId.current);\n      window.clearTimeout(timerId1.current);\n      window.clearTimeout(timerId2.current);\n      window.clearTimeout(timerId3.current);\n    };\n  }, []);\n\n  return (\n    <FakeLoaderContainer>\n      <TextWrapper>{text}</TextWrapper>\n      <ImgWrapper>\n        <img src={Watches} alt=\"it might take time\" />\n      </ImgWrapper>\n    </FakeLoaderContainer>\n  );\n};\n\nconst ImgWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    img {\n      object-fit: contain;\n      width: 100%;\n      height: 100%;\n    }\n    justify-content: flex-start;\n    align-items: flex-start;\n    height: calc(100% - 5.5rem - 2rem);\n  }\n`;\n\nconst TextWrapper = styled.div`\n  text-align: left;\n  width: 100%;\n\n  @media (max-width: 425px) {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst FakeLoaderContainer = styled.div`\n  height: 100%;\n  font-size: 2.4rem;\n  animation: ${fadeIn} 0.5s linear;\n  font-weight: 500;\n  padding: 2rem;\n`;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store/store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled from \"styled-components\";\n\nexport const CursorWrap = styled.div`\n    cursor: pointer;\n`","import React, { ChangeEvent } from \"react\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { BsX as BsXLg } from \"react-icons/bs\";\n\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks/hooks\";\nimport { MailboxSections } from \"../../models/types/enums/mailbox-sections\";\nimport { mailboxActions } from \"../../redux/reducers/mailbox/mailboxSlice\";\nimport { CursorWrap } from \"../UI/Wraps/CursorWrap\";\n\ninterface LetterProps {\n  sectionType: MailboxSections;\n}\n\nexport const Letter: React.FC<LetterProps> = ({ sectionType }) => {\n  const { incoming, sent, drafts, deleted, spam, customSections } =\n    useAppSelector((state) => state.mailbox);\n  const mailboxSections = useAppSelector((state) => state.mailbox);\n  const sections = useAppSelector((state) => state.mailbox);\n  const dispatch = useAppDispatch();\n  const params: { id: string; customSectionId: string } = useParams();\n  const history = useHistory();\n\n  const [letter, setLetter] = React.useState<Letter | undefined>();\n\n  const findLetter = React.useCallback(\n    function (letters: Array<Letter>): Letter | undefined {\n      return letters.find((letter: Letter) => letter.id === params.id);\n    },\n    [params.id]\n  );\n\n  React.useEffect(() => {\n    if (!letter) return;\n    dispatch(\n      mailboxActions.changeLetterStatus({\n        sectionType,\n        sectionId: params.customSectionId,\n        letterId: letter.id,\n      })\n    );\n  }, [letter]);\n\n  React.useEffect(() => {\n    if (!params.id) return;\n    let letter;\n    if (sectionType === MailboxSections.incoming) {\n      letter = findLetter(incoming.letters);\n    }\n    if (sectionType === MailboxSections.sent) {\n      letter = findLetter(sent.letters);\n    }\n    if (sectionType === MailboxSections.drafts) {\n      letter = findLetter(drafts.letters);\n    }\n    if (sectionType === MailboxSections.deleted) {\n      letter = findLetter(deleted.letters);\n    }\n    if (sectionType === MailboxSections.spam) {\n      letter = findLetter(spam.letters);\n    }\n    if (sectionType === MailboxSections.custom) {\n      letter = findLetter(\n        (() => {\n          const section = customSections.find(\n            (section: MailboxSection) => section.id === params.customSectionId\n          );\n          if (section) return section.letters;\n          else return [];\n        })()\n      );\n    }\n    if (letter) setLetter(letter);\n    else closeLetter();\n  }, [\n    deleted.letters,\n    drafts.letters,\n    incoming.letters,\n    sent.letters,\n    spam.letters,\n    params.id,\n    sectionType,\n    findLetter,\n  ]);\n\n  function moveLetter(e: ChangeEvent<HTMLSelectElement>) {\n    const sectionTypeTo = e.target.value;\n    let sectionFrom = mailboxSections[sectionType];\n    if (sectionType === MailboxSections.custom) {\n      sectionFrom = mailboxSections[sectionType].find(\n        (section: MailboxSection) => section.id === params.customSectionId\n      );\n    }\n    if (!letter) return console.error(\"No letter in Letter.tsx\");\n    dispatch(\n      mailboxActions.moveLetter({\n        from: { sectionType, section: sectionFrom },\n        letter,\n        to: { sectionType: sectionTypeTo },\n      })\n    );\n  }\n\n  const closeLetter = () => {\n    const slugs = history.location.pathname.split(\"/\");\n    const oneSlugBack = slugs.slice(0, slugs.length - 1);\n    const url = oneSlugBack.join(\"/\");\n    history.push(url);\n  };\n\n  if (!letter) return <span>Loading...</span>;\n\n  return (\n    <>\n      <WindowControls>\n        <CursorWrap>\n          <BsXLg onClick={closeLetter} />\n        </CursorWrap>\n      </WindowControls>\n      <LetterWindowContainer>\n        <TopBar>\n          <UserPersonal>\n            <Avatar />\n            <Creds>\n              <Name>{letter.sender.name}</Name>\n              <Email>{letter.sender.email}</Email>\n            </Creds>\n          </UserPersonal>\n          <Controls>\n            <Select name=\"select\" onChange={moveLetter}>\n              <option>Переместить в...</option>\n              {Object.values(sections).map(\n                (sec: MailboxSection, i) =>\n                  !Array.isArray(sec) && (\n                    <option key={sec.id} value={Object.keys(sections)[i]}>\n                      {sec.name}\n                    </option>\n                  )\n              )}\n              {customSections.map((sec: MailboxSection) => (\n                <option key={sec.id} value={sec.id}>\n                  {sec.name}\n                </option>\n              ))}\n            </Select>\n          </Controls>\n        </TopBar>\n        <LetterContainer>\n          <LetterLayout>\n            <ReactMarkdown>{letter.message}</ReactMarkdown>\n          </LetterLayout>\n        </LetterContainer>\n      </LetterWindowContainer>\n    </>\n  );\n};\n\nconst LetterWindowContainer = styled.div`\n  padding: 2rem;\n  background-color: rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  height: 100%;\n  overflow-y: auto;\n  flex: 1;\n  @media (max-width: 425px) {\n    padding: .5rem;\n  }\n`;\n\nconst WindowControls = styled.div`\n  height: 2rem;\n  margin-bottom: 1rem;\n  svg {\n    width: 2rem;\n    height: 100%;\n  }\n`;\n\nconst Select = styled.select`\n  padding: 1rem;\n`;\n\nconst LetterLayout = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 2rem;\n  background-color: white;\n  box-shadow: 0px 5px 5px 2px rgba(0, 0, 0, 0.1);\n\n  p {\n    font-size: 1.8rem;\n  }\n`;\n\nconst LetterContainer = styled.div`\n  flex: 1;\n  padding-top: 2rem;\n  overflow-y: auto;\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  align-items: flex-start;\n  svg {\n    width: 1.5rem;\n    height: 100%;\n  }\n  & > * {\n    &:not(:last-child) {\n      margin-right: 1rem;\n    }\n  }\n`;\n\nconst Email = styled.span`\n  font-size: 1.4rem;\n`;\n\nconst Name = styled.span``;\n\nconst Creds = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 2.4rem;\n  margin-left: 2rem;\n`;\n\nconst UserPersonal = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Avatar = styled.div`\n  width: 8rem;\n  height: 8rem;\n  border-radius: 100%;\n  background-color: gray;\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media (max-width: 425px) {\n    flex-direction: column;\n    align-items: center;\n    & > * {\n      margin-top: 1rem;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const SpanWithOverflow = styled.span`\n  display: block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { BsFillTrash2Fill } from \"react-icons/bs\";\nimport { BsCheck2 } from \"react-icons/bs\";\n\nimport { SpanWithOverflow } from \"../UI/Spans/SpanWithOverflow\";\nimport { useAppDispatch } from \"../../redux/hooks/hooks\";\nimport { mailboxActions } from \"../../redux/reducers/mailbox/mailboxSlice\";\nimport { MailboxSections } from \"../../models/types/enums/mailbox-sections\";\nimport { CursorWrap } from \"../UI/Wraps/CursorWrap\";\n\ninterface LetterTabProps {\n  letter: Letter;\n  sectionType: MailboxSections;\n  section: MailboxSection;\n  onCheck: Dispatch<SetStateAction<Letter[]>>;\n  isChecked: boolean;\n}\n\nexport const LetterTab: React.FC<LetterTabProps> = ({\n  letter,\n  sectionType,\n  section,\n  onCheck = () => {},\n  isChecked = false,\n}) => {\n  const dispatch = useAppDispatch();\n  const { url } = useRouteMatch();\n\n  function deleteLetter(): void {\n    dispatch(\n      mailboxActions.deleteLetter({ id: letter.id, sectionType, section })\n    );\n  }\n\n  function toggleCheckbox(): void {\n    onCheck((prev) => {\n      if (prev.includes(letter)) {\n        return prev.filter(\n          (checkedLetter: Letter) => checkedLetter.id !== letter.id\n        );\n      } else {\n        return [...new Set([...prev, letter])];\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    return () => {\n      onCheck([]);\n    };\n  }, []);\n\n  if (!letter) return <span>Something went wrong...</span>;\n\n  return (\n    <LetterTabContainer>\n      <Status seen={letter.status.seen}>\n        <StatusWord>{letter.status.seen ? \"seen\" : \"new\"}</StatusWord>\n        <StatusIndicator seen={letter.status.seen} />\n      </Status>\n      <VerticalDivider />\n      <div>\n        <Checkbox checked={isChecked} onClick={toggleCheckbox}>\n          {isChecked && <BsCheck2 />}\n        </Checkbox>\n      </div>\n      <VerticalDivider />\n      <Creds>\n        <From>\n          <Link to={`${url}/${letter.id}`}>{letter.sender.name}</Link>\n        </From>\n\n        <Email>{letter.sender.email}</Email>\n      </Creds>\n      <VerticalDivider />\n      <Topic>{letter.topic}</Topic>\n      <VerticalDivider />\n      <Preview>\n        <Link to={`${url}/${letter.id}`}>{letter.message}</Link>\n      </Preview>\n      <VerticalDivider />\n      <Actions>\n        <CursorWrap>\n          <BsFillTrash2Fill onClick={deleteLetter} />\n        </CursorWrap>\n      </Actions>\n      <VerticalDivider />\n      <SentAt>\n        {new Date(letter.receivedAt).toLocaleString(\"default\", {\n          weekday: \"short\",\n        }) + \" \"}\n        {new Date(letter.receivedAt).getHours()}:\n        {new Date(letter.receivedAt).getMinutes()}\n      </SentAt>\n    </LetterTabContainer>\n  );\n};\n\ninterface StatusProps {\n  seen: boolean;\n}\n\nconst StatusIndicator = styled.div<StatusProps>`\n  display: none;\n  width: 1rem;\n  height: 1rem;\n  border-radius: 100%;\n  background-color: ${(p) => (p.seen ? \"rgba(0,0,0,.3)\" : \"green\")};\n  @media (max-width: 425px) {\n    display: block;\n  }\n`;\n\nconst StatusWord = styled.span`\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\nconst Status = styled.span<StatusProps>`\n  font-weight: 600;\n  color: ${(p) => (p.seen ? \"rgba(0,0,0,.3)\" : \"green\")};\n  @media (max-width: 425px) {\n    /* margin-right: .5rem; */\n  }\n`;\n\nconst VerticalDivider = styled.div`\n  height: 50%;\n  border-right: 1px solid gray;\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\nconst Creds = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 0 2rem !important;\n  width: 12%;\n  @media (max-width: 425px) {\n    padding: 0 !important;\n    min-width: 8rem;\n  }\n`;\n\nconst Preview = styled(SpanWithOverflow)`\n  flex: 1;\n  color: gray;\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\ninterface CheckboxProps {\n  checked: boolean;\n}\n\nconst Checkbox = styled.div<CheckboxProps>`\n  width: 2rem;\n  height: 2rem;\n  border: 1px solid gray;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  /* background-color: ${(p) => p.checked && \"rgba(0,0,0,.1)\"}; */\n  @media (max-width: 425px) {\n    width: 1.3rem;\n    height: 1.3rem;\n  }\n`;\n\nconst From = styled(SpanWithOverflow)`\n  font-weight: 500;\n  @media (max-width: 425px) {\n    width: 100%;\n    text-align: center;\n  }\n`;\n\nconst Email = styled(SpanWithOverflow)`\n  color: gray;\n  font-size: 1.4rem;\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\n\nconst SentAt = styled(SpanWithOverflow)`\n  min-width: 8.7rem;\n  text-align: center;\n  @media (max-width: 425px) {\n    width: 5rem;\n  }\n`;\n\nconst Topic = styled(SpanWithOverflow)`\n  width: 12%;\n  text-align: center;\n  @media (max-width: 425px) {\n    display: none;\n  }\n`;\nconst Actions = styled.span`\n  display: flex;\n  justify-content: center;\n`;\n\nconst LetterTabContainer = styled.div`\n  border: 1px solid grey;\n  border-radius: 15px;\n  padding: 2rem 2rem;\n  display: flex;\n  align-items: center;\n  & > * {\n    &:nth-child(odd) {\n      padding: 0 1rem;\n    }\n  }\n  @media (max-width: 425px) {\n    padding: 1rem 1rem;\n    font-size: 1.6rem;\n    justify-content: space-between;\n    overflow: hidden;\n    & > * {\n      &:not(:last-child) {\n        padding: 0;\n        margin: 0.5rem;\n      }\n      &:last-child {\n        padding: 0;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fadeIn } from \"../../../css/animations/fade-in\";\n\nexport const DropdownMenu: React.FC<DropdownMenuProps> = ({\n  children,\n  options = [],\n}) => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const [x, setX] = React.useState<number>(0);\n  const [y, setY] = React.useState<number>(0);\n  const thisElementId = React.useRef(\n    `options-dropdown-id_${new Date().getTime()}`\n  );\n\n  const childrenRef = React.useRef<HTMLDivElement>(null);\n  const selfRef = React.useRef<HTMLDivElement>(null);\n\n  const closeDropdown = React.useCallback(\n    (e: MouseEvent) => {\n      const target = e.target as Element;\n      if (target.id !== thisElementId.current) {\n        if (isOpen) setIsOpen(false);\n      }\n    },\n    [isOpen]\n  );\n\n  const openDropdown = () => {\n    setIsOpen(true);\n    setDropdownCoords();\n  };\n\n  async function setDropdownCoords() {\n    const { current: childWrapperRef } = childrenRef;\n    const { current: dropdownRef } = selfRef;\n    if (!childWrapperRef || !dropdownRef) {\n      return console.error(\"Could not get refs in dropdown.\");\n    }\n\n    dropdownRef.style.opacity = \"0\";\n\n    const dropdown: DOMRect = dropdownRef.getBoundingClientRect();\n\n    if (!dropdown.height) {\n      setTimeout(() => {\n        setDropdownCoords();\n      }, 0);\n      return;\n    }\n\n    const child: DOMRect = childWrapperRef.getBoundingClientRect();\n\n    let y = child.y + child.height;\n    let x = child.x + child.width;\n\n    dropdownRef.style.opacity = \"1\";\n\n    if (window.innerWidth < 425) {\n      const onePercent = window.innerHeight / 100;\n      const seventyFive = onePercent * 75;\n      x += seventyFive;\n      y -= 55; // header height  \n    }\n    \n    if (y + dropdown.height >= window.innerHeight) {\n      y = child.y - dropdown.height;\n    }\n    if (x + dropdown.width >= window.innerWidth) {\n      x = child.x - dropdown.width;\n    }\n    \n\n    setY(y);\n    setX(x);\n  }\n\n  React.useEffect(() => {\n    window.addEventListener(\"click\", closeDropdown);\n    return () => {\n      window.removeEventListener(\"click\", closeDropdown);\n    };\n  }, [closeDropdown]);\n\n  if (!options.length) return null;\n\n  return (\n    <DropdownWrapper onClick={openDropdown} id={thisElementId.current}>\n      <ChildrenWrapper ref={childrenRef}>{children}</ChildrenWrapper>\n      <Dropdown x={x} y={y} ref={selfRef} isOpen={isOpen}>\n        {options.map((o, i) => (\n          <div key={o.name + i} onClick={() => o.handler()}>\n            {o.name}\n          </div>\n        ))}\n      </Dropdown>\n    </DropdownWrapper>\n  );\n};\n\nconst ChildrenWrapper = styled.div`\n  pointer-events: none;\n  animation: ${fadeIn} 0.1s linear forwards;\n`;\n\ninterface DropdownProps {\n  x: number;\n  y: number;\n  isOpen: boolean;\n}\n\nconst Dropdown = styled.div<DropdownProps>`\n  transition: opacity 0.1s ease;\n  position: fixed;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  /* box-shadow: 0px 0px 5px 2px rgba(0, 0, 0, 0.2); */\n  transform: ${(p) => `translate(${p.x}px, ${p.y}px)`};\n  display: ${(p) => (p.isOpen ? \"initial\" : \"none\")};\n  & > * {\n    padding: 0.5rem;\n    cursor: pointer;\n    user-select: none;\n    transition: background-color 0.15s ease;\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n  }\n  @media (max-width: 425px) {\n    /* transform: ${(p) => `translate(calc(${p.x}px + 75%), calc(${p.y - 55}px))`}; */\n  }\n`;\n\nconst DropdownWrapper = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nimport { useAppSelector } from \"../../redux/hooks/hooks\";\n\nimport { LetterTab } from \"../Letter/LetterTab\";\nimport { ServiceButton } from \"../UI/Buttons/ServiceButton/ServiceButton\";\n\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport RidingTrain from \"../../assets/images/gif/riding-train-0.gif\";\n\nimport { MailboxSections } from \"../../models/types/enums/mailbox-sections\";\nimport { DropdownMenu } from \"../UI/Dropdowns/DropdownMenu\";\nimport { mailboxActions } from \"../../redux/reducers/mailbox/mailboxSlice\";\nimport { fadeIn } from \"../../css/animations/fade-in\";\nimport { SpanWithOverflow } from \"../UI/Spans/SpanWithOverflow\";\n\ninterface MailboxSectionProps {\n  sectionType: MailboxSections;\n}\n\nexport const MailboxSection: React.FC<MailboxSectionProps> = ({\n  sectionType,\n}) => {\n  const { incoming, sent, deleted, drafts, spam, customSections } =\n    useAppSelector((state) => state.mailbox);\n  const mailboxSections = useAppSelector((state) => state.mailbox);\n  const dispatch = useDispatch();\n  const params: { customSectionId: string } = useParams();\n  const history = useHistory();\n\n  const [mail, setMail] = React.useState<Array<Letter>>([]);\n  const [section, setSection] = React.useState<MailboxSection | null>();\n  const [checkedLetters, setCheckedLetters] = React.useState<Array<Letter>>([]);\n\n  const goToIncoming = (errMessage: string) => {\n    history.push(\"/mailbox/incoming\");\n    console.error(errMessage);\n  };\n\n  React.useEffect(() => {\n    if (sectionType === MailboxSections.custom) {\n      if (!params.customSectionId)\n        return console.error(\"No custom section id in mailbox!\");\n\n      if (!customSections.length)\n        return goToIncoming(\"No custom sections in mailbox!\");\n\n      const section = customSections.find(\n        (section: MailboxSection) => section.id === params.customSectionId\n      );\n\n      if (!section) return goToIncoming(\"No custom section in mailbox!\");\n\n      setMail(section.letters);\n      setSection(section);\n    } else {\n      const section = mailboxSections[sectionType];\n      if (!section) return goToIncoming(\"No custom section in mailbox!\");\n      setMail(section.letters);\n      setSection(mailboxSections[sectionType]);\n    }\n  }, [\n    deleted,\n    drafts,\n    incoming,\n    sent,\n    spam,\n    sectionType,\n    params.customSectionId,\n    customSections,\n  ]);\n\n  const deleteCheckedLetters = () => {\n    if (!section) return console.error(\"No section on Mailbox.tsx\");\n    if (sectionType === MailboxSections.deleted) {\n      checkedLetters.forEach((letter: Letter) => {\n        dispatch(\n          mailboxActions.deleteLetter({\n            sectionType,\n            id: letter.id,\n          })\n        );\n      });\n      setCheckedLetters([]);\n    } else {\n      moveLettersTo(MailboxSections.deleted);\n    }\n  };\n\n  const moveLettersTo = (where: string) => {\n    if (!section) return console.error(\"No section on Mailbox.tsx\");\n    checkedLetters.forEach((letter: Letter) => {\n      dispatch(\n        mailboxActions.moveLetter({\n          from: {\n            sectionType,\n            section,\n          },\n          letter,\n          to: { sectionType: where },\n        })\n      );\n      setCheckedLetters([]);\n    });\n  };\n\n  const sortLettersByDate = () => {\n    setMail((letters) =>\n      JSON.parse(JSON.stringify(letters)).sort((a: Letter, b: Letter) => {\n        return (\n          new Date(a.receivedAt).getTime() - new Date(b.receivedAt).getTime()\n        );\n      })\n    );\n  };\n\n  const sortLettersByStatus = () => {\n    setMail((letters) =>\n      JSON.parse(JSON.stringify(letters)).sort((a: Letter, b: Letter) => {\n        if (a.status.seen) return 1;\n        if (!a.status.seen) return -1;\n        return 0;\n      })\n    );\n  };\n\n  const checkAll = () => {\n    setCheckedLetters(mail);\n  };\n\n  const uncheckAll = () => {\n    setCheckedLetters([]);\n  };\n\n  const handlers = {\n    delete: {\n      name:\n        sectionType === MailboxSections.deleted\n          ? \"Удалить навсегда\"\n          : \"Удалить отмеченные\",\n      handler: () => {\n        deleteCheckedLetters();\n        if (sectionType === MailboxSections.deleted) {\n          toast.success(\"Письма удалены из вашей почты!\");\n        } else {\n          toast.success('Письма перемещены в папку \"удаленные\".');\n        }\n      },\n    },\n    spam: {\n      name: \"Переместить в спам\",\n      handler: () => {\n        moveLettersTo(MailboxSections.spam);\n        toast.success('Письма перемещены в папку \"спам\".');\n      },\n    },\n    incoming: {\n      name: \"Переместить во входящие\",\n      handler: () => {\n        toast.success('Письма перемещены в папку \"входящие\".');\n        moveLettersTo(MailboxSections.incoming);\n      },\n    },\n  };\n\n  function returnMenuOptions(): Array<DropdownMenuOption> {\n    if (!checkedLetters.length) return [];\n    const customSectionsHandlers = customSections\n      .map((sec: MailboxSection) => ({\n        name: `Переместить в ${sec.name}`,\n        handler: () => {\n          moveLettersTo(sec.id);\n          toast.success(`Письма перемещены в папку \"${sec.name}\".`);\n        },\n      }))\n      .filter(Boolean);\n\n    if (sectionType === MailboxSections.incoming) {\n      return [handlers.delete, handlers.spam, ...customSectionsHandlers];\n    }\n    if (sectionType === MailboxSections.sent) {\n      return [handlers.delete, ...customSectionsHandlers];\n    }\n    if (sectionType === MailboxSections.drafts) {\n      return [handlers.delete, ...customSectionsHandlers];\n    }\n    if (sectionType === MailboxSections.spam) {\n      return [handlers.delete, ...customSectionsHandlers];\n    }\n    if (sectionType === MailboxSections.deleted) {\n      return [handlers.delete, ...customSectionsHandlers];\n    }\n    return [...customSectionsHandlers, handlers.delete];\n  }\n\n  const TopBarComponent = () => {\n    return (\n      <TopBar>\n        <MailboxName>\n          <SpanWithOverflow>\n            {section && section.name.toUpperCase()}\n          </SpanWithOverflow>\n        </MailboxName>\n        <Controls>\n          {!!mail.length && (\n            <ServiceButton\n              onClick={\n                checkedLetters.length === mail.length ? uncheckAll : checkAll\n              }\n            >\n              {checkedLetters.length === mail.length\n                ? \"Uncheck all\"\n                : \"Check all\"}\n            </ServiceButton>\n          )}\n          <ServiceButton onClick={sortLettersByDate}>\n            Sort by date\n          </ServiceButton>\n          <ServiceButton onClick={sortLettersByStatus}>\n            Sort by status\n          </ServiceButton>\n          <DropdownMenu options={[...returnMenuOptions()]}>\n            <ServiceButton>\n              <BsThreeDotsVertical />\n            </ServiceButton>\n          </DropdownMenu>\n        </Controls>\n      </TopBar>\n    );\n  };\n\n  if (!mail.length)\n    return (\n      <MailBoxContainer>\n        <TopBarComponent />\n        <EmptyPageWrap>\n          <h2 style={{ textAlign: \"center\" }}>This folder is empty</h2>\n          <ImgWrapper>\n            <Image src={RidingTrain} alt=\"This folder is empty\" />\n          </ImgWrapper>\n        </EmptyPageWrap>\n      </MailBoxContainer>\n    );\n\n  if (!section) return <span>Loading...</span>;\n\n  return (\n    <MailBoxContainer>\n      <TopBarComponent />\n      {mail.map((letter: Letter) => (\n        <LetterTab\n          letter={letter}\n          sectionType={sectionType}\n          section={section}\n          onCheck={setCheckedLetters}\n          isChecked={checkedLetters.includes(letter)}\n          key={letter.id}\n        />\n      ))}\n    </MailBoxContainer>\n  );\n};\n\nconst EmptyPageWrap = styled.div`\n  animation: ${fadeIn} 0.2s ease forwards;\n  max-height: 500px;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n`;\n\nconst ImgWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst MailboxName = styled.h2`\n  padding: 0;\n  margin: 0;\n  @media (max-width: 425px) {\n    max-width: 45%;\n  }\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  align-items: flex-start;\n  svg {\n    width: 2rem;\n    height: 100%;\n  }\n  button {\n    height: 4rem;\n  }\n  & > * {\n    &:not(:last-child) {\n      margin-right: 1rem;\n    }\n  }\n  @media (max-width: 425px) {\n    flex-direction: column;\n    align-items: flex-end;\n    & > * {\n      &:not(:last-child) {\n        margin-right: 0rem;\n        margin-bottom: 1rem;\n      }\n    }\n  }\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  min-height: 4rem;\n`;\n\nconst MailBoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > * {\n    &:not(:last-child) {\n      margin-bottom: 2rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { FakeLoader } from \"../../components/FakeLoader/FakeLoader\";\nimport { Letter } from \"../../components/Letter/Letter\";\nimport { MailboxSection } from \"../../components/MailboxSection/MailboxSection\";\nimport { MailboxSections } from \"../../models/types/enums/mailbox-sections\";\n\nexport const MailClientRoutes = () => {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${path}`} exact={true}>\n        <FakeLoader />\n      </Route>\n      <Route path={`${path}/incoming`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.incoming} />\n      </Route>\n      <Route path={`${path}/sent`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.sent} />\n      </Route>\n      <Route path={`${path}/deleted`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.deleted} />\n      </Route>\n      <Route path={`${path}/drafts`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.drafts} />\n      </Route>\n      <Route path={`${path}/spam`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.spam} />\n      </Route>\n      <Route path={`${path}/:customSectionId`} exact={true}>\n        <MailboxSection sectionType={MailboxSections.custom} />\n      </Route>\n\n      <Route path={`${path}/incoming/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.incoming} />\n      </Route>\n      <Route path={`${path}/sent/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.sent} />\n      </Route>\n      <Route path={`${path}/deleted/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.deleted} />\n      </Route>\n      <Route path={`${path}/drafts/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.drafts} />\n      </Route>\n      <Route path={`${path}/spam/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.spam} />\n      </Route>\n      <Route path={`${path}/:customSectionId/:id`} exact={true}>\n        <Letter sectionType={MailboxSections.custom} />\n      </Route>\n    </Switch>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ServiceInput = styled.input`\n  padding: 1rem;\n`;\n","import styled from \"styled-components\";\n\ninterface Props {\n  open: boolean;\n}\n\nexport const MenuTab: any = styled.div<Props>`\n  transition: transform 0.1s ease;\n  padding: 1rem;\n  border: 1px solid gray;\n  border-radius: ${(p) => p.open ? `15px 0px 0px 15px` : \"0\"};\n  font-size: 1.6rem;\n  background-color: white;\n  transform: ${(p) => p.open && `translateX(2.1rem)`};\n  border-right: ${(p) => p.open && `none`};\n  @media (max-width: 425px) {\n    transform: none;\n    border-right: 1px solid gray;\n    border-radius: 0rem;\n  }\n`;\n","import React from \"react\";\nimport { BsThreeDotsVertical, BsCheck2 } from \"react-icons/bs\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fadeIn } from \"../../../../css/animations/fade-in\";\nimport { useAppDispatch } from \"../../../../redux/hooks/hooks\";\nimport { mailboxActions } from \"../../../../redux/reducers/mailbox/mailboxSlice\";\nimport { ServiceButton } from \"../../Buttons/ServiceButton/ServiceButton\";\nimport { DropdownMenu } from \"../../Dropdowns/DropdownMenu\";\nimport { ServiceInput } from \"../../Inputs/ServiceInput\";\nimport { CursorWrap } from \"../../Wraps/CursorWrap\";\nimport { MenuTab } from \"../MenuTab\";\n\ninterface CustomSecMenuTabProps {\n  section: MailboxSection;\n}\n\nexport const CustomSectionMenuTab: React.FC<CustomSecMenuTabProps> = ({\n  section,\n}) => {\n  const { url } = useRouteMatch();\n  const dispatch = useAppDispatch();\n\n  const [isTabRenaming, setTabRenaming] = React.useState<boolean>(false);\n  const [newSectionName, setNewSectionName] = React.useState<string>(\"\");\n\n  const thisElementId = React.useRef(\n    `custom-section-tab-id_${new Date().getTime()}`\n  );\n\n  const stopTabRenaming = React.useCallback(\n    (e: MouseEvent) => {\n      const target = e.target as Element;\n      if (target.id !== thisElementId.current) {\n        if (isTabRenaming) setTabRenaming(false);\n      }\n    },\n    [isTabRenaming]\n  );\n\n  React.useEffect(() => {\n    window.addEventListener(\"click\", stopTabRenaming, true);\n    return () => {\n      window.removeEventListener(\"click\", stopTabRenaming, true);\n    };\n  }, [stopTabRenaming]);\n\n  function deleteNewSection(id: string): void {\n    dispatch(mailboxActions.deleteSection({ id }));\n    setNewSectionName(\"\");\n  }\n\n  function startRenamingTab(): void {\n    setTabRenaming(true);\n    setNewSectionName(section.name);\n  }\n\n  function renameTab(id: string): void {\n    if (!newSectionName.length) return;\n    dispatch(mailboxActions.renameSection({ name: newSectionName, id }));\n    setTabRenaming(false);\n    setNewSectionName(\"\");\n  }\n\n  function copyTab(id: string): void {\n    dispatch(mailboxActions.copySection({ id }));\n    setNewSectionName(\"\");\n  }\n  \n  return (\n    <CustomTab id={thisElementId.current}>\n      {isTabRenaming ? (\n        <TabNameInputs>\n          <SpecialInput\n            id={thisElementId.current}\n            type=\"text\"\n            placeholder=\"Type new section name\"\n            value={newSectionName.slice(0, 21)}\n            onChange={(e) => setNewSectionName(e.target.value)}\n            maxLength={20}\n          />\n          <ServiceButton\n            id={thisElementId.current}\n            onClick={() => renameTab(section.id)}\n          >\n            <div style={{ pointerEvents: \"none\", display: \"flex\", alignItems: \"center\" }}>\n              <BsCheck2 />\n            </div>\n          </ServiceButton>\n        </TabNameInputs>\n      ) : (\n        <Link to={`${url}/${section.slug}`}>{section.name}</Link>\n      )}\n      <DropdownMenu\n        options={[\n          {\n            name: \"удалить\",\n            handler: () => deleteNewSection(section.id),\n          },\n          { name: \"переименовать\", handler: () => startRenamingTab() },\n          { name: \"копировать\", handler: () => copyTab(section.id) },\n        ]}\n      >\n        <CursorWrap>\n          <BsThreeDotsVertical />\n        </CursorWrap>\n      </DropdownMenu>\n    </CustomTab>\n  );\n};\n\nconst SpecialInput = styled.input`\n  width: 70%;\n  margin-right: .5rem;\n  padding: 0;\n  border: none;\n  font-size: 1.6rem;\n  outline: none;\n  &::placeholder {\n    font-size: 1rem;\n  }\n`\n\nconst TabNameInputs = styled.div`\n  display: flex;\n  button {\n    padding: 0rem 1rem;\n  }\n`;\n\nconst CustomTab = styled(MenuTab)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  animation: ${fadeIn} .2s ease;\n  z-index: 1;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useRouteMatch, Link, useLocation } from \"react-router-dom\";\n\nimport { BsCheck2 } from \"react-icons/bs\";\n\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks/hooks\";\nimport { ServiceButton } from \"../UI/Buttons/ServiceButton/ServiceButton\";\nimport { ServiceInput } from \"../UI/Inputs/ServiceInput\";\nimport { CustomSectionMenuTab } from \"../UI/Tabs/CustomSectionMenuTab/CustomSectionMenuTab\";\nimport { mailboxActions } from \"../../redux/reducers/mailbox/mailboxSlice\";\nimport { MenuTab } from \"../UI/Tabs/MenuTab\";\nimport { SpanWithOverflow } from \"../UI/Spans/SpanWithOverflow\";\nimport { fadeIn } from \"../../css/animations/fade-in\";\n\nexport const DrawerMenu = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n  const mailboxSections = useAppSelector((state) => state.mailbox);\n  const dispatch = useAppDispatch();\n\n  const [newSectionName, setNewSectionName] = React.useState<string>(\"\");\n  const [drawerHeight, setDrawerHeight] = React.useState<number>(0);\n\n  const [isSectionNameInputOpen, setSectionNameInputOpen] =\n    React.useState<boolean>(false);\n\n  const CustomTabsScrollWrapper = React.useRef<HTMLDivElement>(null);\n\n  function openSectionNameInput(): void {\n    setSectionNameInputOpen(true);\n  }\n\n  function addNewSection(): void {\n    const { customSections } = mailboxSections;\n    const nonUniqueSection = customSections.find(\n      (section: MailboxSection) => section.name === newSectionName\n    );\n    if (nonUniqueSection) {\n      return console.error(`Section called ${newSectionName} already exists!`);\n    }\n    if (!newSectionName) return console.error(`No empty section name allowed!`);\n    dispatch(mailboxActions.addSection({ name: newSectionName }));\n    setNewSectionName(\"\");\n    setSectionNameInputOpen(false);\n  }\n\n  const addStylesIfScroll = React.useCallback(\n    function (): void {\n      const { current: tabsScrollWrap } = CustomTabsScrollWrapper;\n      if (!tabsScrollWrap) return;\n      if (tabsScrollWrap.scrollHeight > tabsScrollWrap.clientHeight) {\n        tabsScrollWrap.style.padding = \"1rem\";\n        tabsScrollWrap.style.backgroundColor = \"rgba(0,0,0,.1)\";\n        tabsScrollWrap.style.borderTop = \"1px solid rgba(0,0,0,.2)\";\n        tabsScrollWrap.style.borderBottom = \"1px solid rgba(0,0,0,.2)\";\n        tabsScrollWrap.style.borderRadius = \"5px\";\n      }\n    },\n    [CustomTabsScrollWrapper.current]\n  );\n\n  React.useEffect(() => {\n    const { current: tabsScrollWrap } = CustomTabsScrollWrapper;\n    if (!tabsScrollWrap) return;\n    setDrawerHeight(tabsScrollWrap.clientHeight);\n  }, []);\n\n  React.useEffect(() => {\n    window.addEventListener(\"click\", addStylesIfScroll);\n    return () => {\n      window.removeEventListener(\"click\", addStylesIfScroll);\n    };\n  }, []);\n\n  return (\n    <>\n      {Object.values(mailboxSections).map(\n        (section: MailboxSection) =>\n          !Array.isArray(section) && (\n            <Link key={section.id} to={`${url}/${section.slug}`}>\n              <MenuTab open={location.pathname === `${url}/${section.slug}`}>\n                <SpanWithOverflow>{section.name}</SpanWithOverflow>\n              </MenuTab>\n            </Link>\n          )\n      )}\n      <ServiceButton onClick={openSectionNameInput}>+ создать</ServiceButton>\n      {isSectionNameInputOpen && (\n        <SectionNameInputContainer>\n          <ServiceInput\n            type=\"text\"\n            placeholder=\"Type new section name\"\n            value={newSectionName.slice(0, 21)}\n            onChange={(e) => setNewSectionName(e.target.value)}\n            maxLength={20}\n          />\n          <ServiceButton onClick={addNewSection}>\n            <BsCheck2 />\n          </ServiceButton>\n        </SectionNameInputContainer>\n      )}\n      <CustomTabsScroll\n        ref={CustomTabsScrollWrapper}\n        onClick={addStylesIfScroll}\n        drawerHeight={drawerHeight}\n      >\n        <CustomTabsContainer>\n          {mailboxSections.customSections.map((section: MailboxSection) => (\n            <CustomSectionMenuTab key={section.id} section={section} />\n          ))}\n        </CustomTabsContainer>\n      </CustomTabsScroll>\n    </>\n  );\n};\n\nconst CustomTabsContainer = styled.div`\n  & > * {\n    &:not(:last-child) {\n      margin-bottom: 1rem;\n    }\n  }\n`;\n\ninterface CustomTabsScrollProps {\n  drawerHeight: number;\n}\n\nconst CustomTabsScroll = styled.div<CustomTabsScrollProps>`\n  flex: ${(p) => (p.drawerHeight ? \"none\" : 1)};\n  height: ${(p) => p.drawerHeight + \"px\" || \"none\"};\n  transition: all 0.2s ease;\n  overflow-y: auto;\n  &::-webkit-scrollbar {\n    width: 1rem;\n    background-color: transparent;\n    border: none;\n    padding-left: 0.5rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n    border: none;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(0, 0, 0, 0.2);\n    border: none;\n    border-radius: 1.5rem;\n  }\n  @media (max-width: 425px) {\n    height: calc(100vh / 2 - 5.5rem);\n  }\n`;\n\nconst SectionNameInputContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: stretch;\n  overflow: hidden;\n  animation: ${fadeIn} 0.2s ease;\n  button {\n    width: 30%;\n  }\n  input {\n    width: 70%;\n    margin-right: 1rem;\n    &::placeholder {\n      font-style: oblique;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { MailClientRoutes } from \"../../configs/routes/mail-client-routes\";\nimport { DrawerMenu } from \"../DrawerMenu/DrawerMenu\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { ServiceButton } from \"../UI/Buttons/ServiceButton/ServiceButton\";\n\nexport const MailClient: React.FC = () => {\n  const [isDrawerShow, setDrawerShow] = React.useState<boolean>(false);\n\n  function showDrawer() {\n    setDrawerShow(true);\n  }\n\n  function closeDrawer() {\n    setDrawerShow(false);\n  }\n\n  return (\n    <>\n      <Header>\n        <ServiceButton onClick={showDrawer}>\n          <GiHamburgerMenu />\n        </ServiceButton>\n      </Header>\n      <MailClientContainer>\n        <OpaqueScreen\n          isShow={isDrawerShow}\n          onClick={closeDrawer}\n        ></OpaqueScreen>\n        <Drawer isShow={isDrawerShow}>\n          <DrawerMenu />\n        </Drawer>\n        <Client>\n          <MailClientRoutes />\n        </Client>\n      </MailClientContainer>\n    </>\n  );\n};\n\ninterface DrawerProps {\n  isShow: boolean;\n}\n\nconst OpaqueScreen = styled.div<DrawerProps>`\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  display: none;\n  transition: opacity 0.5s ease;\n  opacity: ${(p) => (p.isShow ? \"1\" : \"0\")};\n  @media (max-width: 425px) {\n    display: block;\n    pointer-events: ${(p) => (p.isShow ? \"all\" : \"none\")};\n  }\n`;\n\nconst Header = styled.div`\n  display: none;\n  z-index: 11;\n  @media (max-width: 425px) {\n    position: sticky;\n    top: 0;\n    display: flex;\n    flex-direction: row-reverse;\n    padding: 1rem;\n    height: 5.5rem;\n    width: 100%;\n    background-color: #ececec;\n  }\n`;\n\nconst Client = styled.div`\n  grid-area: scrn;\n  width: 100%;\n  border: 1px solid gray;\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  overflow-y: auto;\n  @media (max-width: 425px) {\n    padding: 1rem;\n  }\n`;\n\nconst MailClientContainer = styled.div`\n  display: grid;\n  grid-template: \"drwr scrn\" 100% \"drwr scrn\" / 20% 80%;\n  width: 100%;\n  padding: 2rem;\n  height: 100vh;\n  @media (max-width: 425px) {\n    grid-template: \"scrn\" 100% \"scrn\" / 100%;\n    padding: 1rem;\n\n  }\n`;\n\nconst Drawer = styled.div<DrawerProps>`\n  grid-area: drwr;\n  display: flex;\n  flex-direction: column;\n  padding-right: 2rem;\n  & > * {\n    &:not(:last-child) {\n      margin-bottom: 1rem;\n    }\n  }\n  @media (max-width: 425px) {\n    position: fixed;\n    top: 5.5rem;\n    left: 0;\n    background-color: white;\n    height: 100%;\n    width: 75%;\n    padding: 1rem;\n    transition: transform 0.5s ease;\n    transform: translateX(${(p) => (p.isShow ? \"0\" : \"-100%\")});\n    z-index: 11;\n  }\n`;\n","import React from \"react\";\nimport {\n  BrowserRouter,\n  Link,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./App.css\";\nimport { Home } from \"./components/Home/Home\";\n\nimport { MailClient } from \"./components/MailClient/MailClient\";\n\n/**\n * TODO:\n * 404\n */\n\nfunction App() {\n  const history = useHistory();\n\n  return (\n    <BrowserRouter>\n      <ToastContainer autoClose={2500} closeOnClick />\n      <div className=\"App\">\n        <Switch>\n          <Route exact={true} path={\"/\"}>\n            <Home />\n          </Route>\n          <Route path={\"/mailbox\"}>\n            <MailClient />\n          </Route>\n          <Route>\n            <h1>404!</h1>\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store/store\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nconst container = document.getElementById(\"root\")!;\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}